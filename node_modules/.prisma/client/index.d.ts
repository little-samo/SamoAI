
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model AgentModel
 * 
 */
export type AgentModel = $Result.DefaultSelection<Prisma.$AgentModelPayload>
/**
 * Model LlmApiModel
 * 
 */
export type LlmApiModel = $Result.DefaultSelection<Prisma.$LlmApiModelPayload>
/**
 * Model LlmApiKeyModel
 * 
 */
export type LlmApiKeyModel = $Result.DefaultSelection<Prisma.$LlmApiKeyModelPayload>
/**
 * Model LocationModel
 * 
 */
export type LocationModel = $Result.DefaultSelection<Prisma.$LocationModelPayload>
/**
 * Model UserApiKeyModel
 * 
 */
export type UserApiKeyModel = $Result.DefaultSelection<Prisma.$UserApiKeyModelPayload>
/**
 * Model UserApiHistoryModel
 * 
 */
export type UserApiHistoryModel = $Result.DefaultSelection<Prisma.$UserApiHistoryModelPayload>
/**
 * Model UserModel
 * 
 */
export type UserModel = $Result.DefaultSelection<Prisma.$UserModelPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const LLMPlatform: {
  ANTHROPIC: 'ANTHROPIC',
  GPT: 'GPT'
};

export type LLMPlatform = (typeof LLMPlatform)[keyof typeof LLMPlatform]


export const UserPlatform: {
  API: 'API',
  TELEGRAM: 'TELEGRAM'
};

export type UserPlatform = (typeof UserPlatform)[keyof typeof UserPlatform]

}

export type LLMPlatform = $Enums.LLMPlatform

export const LLMPlatform: typeof $Enums.LLMPlatform

export type UserPlatform = $Enums.UserPlatform

export const UserPlatform: typeof $Enums.UserPlatform

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more AgentModels
 * const agentModels = await prisma.agentModel.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more AgentModels
   * const agentModels = await prisma.agentModel.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.agentModel`: Exposes CRUD operations for the **AgentModel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgentModels
    * const agentModels = await prisma.agentModel.findMany()
    * ```
    */
  get agentModel(): Prisma.AgentModelDelegate<ExtArgs>;

  /**
   * `prisma.llmApiModel`: Exposes CRUD operations for the **LlmApiModel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LlmApiModels
    * const llmApiModels = await prisma.llmApiModel.findMany()
    * ```
    */
  get llmApiModel(): Prisma.LlmApiModelDelegate<ExtArgs>;

  /**
   * `prisma.llmApiKeyModel`: Exposes CRUD operations for the **LlmApiKeyModel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LlmApiKeyModels
    * const llmApiKeyModels = await prisma.llmApiKeyModel.findMany()
    * ```
    */
  get llmApiKeyModel(): Prisma.LlmApiKeyModelDelegate<ExtArgs>;

  /**
   * `prisma.locationModel`: Exposes CRUD operations for the **LocationModel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LocationModels
    * const locationModels = await prisma.locationModel.findMany()
    * ```
    */
  get locationModel(): Prisma.LocationModelDelegate<ExtArgs>;

  /**
   * `prisma.userApiKeyModel`: Exposes CRUD operations for the **UserApiKeyModel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserApiKeyModels
    * const userApiKeyModels = await prisma.userApiKeyModel.findMany()
    * ```
    */
  get userApiKeyModel(): Prisma.UserApiKeyModelDelegate<ExtArgs>;

  /**
   * `prisma.userApiHistoryModel`: Exposes CRUD operations for the **UserApiHistoryModel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserApiHistoryModels
    * const userApiHistoryModels = await prisma.userApiHistoryModel.findMany()
    * ```
    */
  get userApiHistoryModel(): Prisma.UserApiHistoryModelDelegate<ExtArgs>;

  /**
   * `prisma.userModel`: Exposes CRUD operations for the **UserModel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserModels
    * const userModels = await prisma.userModel.findMany()
    * ```
    */
  get userModel(): Prisma.UserModelDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.1.0
   * Query Engine version: 11f085a2012c0f4778414c8db2651556ee0ef959
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    AgentModel: 'AgentModel',
    LlmApiModel: 'LlmApiModel',
    LlmApiKeyModel: 'LlmApiKeyModel',
    LocationModel: 'LocationModel',
    UserApiKeyModel: 'UserApiKeyModel',
    UserApiHistoryModel: 'UserApiHistoryModel',
    UserModel: 'UserModel'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "agentModel" | "llmApiModel" | "llmApiKeyModel" | "locationModel" | "userApiKeyModel" | "userApiHistoryModel" | "userModel"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      AgentModel: {
        payload: Prisma.$AgentModelPayload<ExtArgs>
        fields: Prisma.AgentModelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgentModelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgentModelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload>
          }
          findFirst: {
            args: Prisma.AgentModelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgentModelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload>
          }
          findMany: {
            args: Prisma.AgentModelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload>[]
          }
          create: {
            args: Prisma.AgentModelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload>
          }
          createMany: {
            args: Prisma.AgentModelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgentModelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload>[]
          }
          delete: {
            args: Prisma.AgentModelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload>
          }
          update: {
            args: Prisma.AgentModelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload>
          }
          deleteMany: {
            args: Prisma.AgentModelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgentModelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgentModelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentModelPayload>
          }
          aggregate: {
            args: Prisma.AgentModelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgentModel>
          }
          groupBy: {
            args: Prisma.AgentModelGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgentModelGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgentModelCountArgs<ExtArgs>
            result: $Utils.Optional<AgentModelCountAggregateOutputType> | number
          }
        }
      }
      LlmApiModel: {
        payload: Prisma.$LlmApiModelPayload<ExtArgs>
        fields: Prisma.LlmApiModelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LlmApiModelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LlmApiModelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload>
          }
          findFirst: {
            args: Prisma.LlmApiModelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LlmApiModelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload>
          }
          findMany: {
            args: Prisma.LlmApiModelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload>[]
          }
          create: {
            args: Prisma.LlmApiModelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload>
          }
          createMany: {
            args: Prisma.LlmApiModelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LlmApiModelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload>[]
          }
          delete: {
            args: Prisma.LlmApiModelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload>
          }
          update: {
            args: Prisma.LlmApiModelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload>
          }
          deleteMany: {
            args: Prisma.LlmApiModelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LlmApiModelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LlmApiModelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiModelPayload>
          }
          aggregate: {
            args: Prisma.LlmApiModelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLlmApiModel>
          }
          groupBy: {
            args: Prisma.LlmApiModelGroupByArgs<ExtArgs>
            result: $Utils.Optional<LlmApiModelGroupByOutputType>[]
          }
          count: {
            args: Prisma.LlmApiModelCountArgs<ExtArgs>
            result: $Utils.Optional<LlmApiModelCountAggregateOutputType> | number
          }
        }
      }
      LlmApiKeyModel: {
        payload: Prisma.$LlmApiKeyModelPayload<ExtArgs>
        fields: Prisma.LlmApiKeyModelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LlmApiKeyModelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LlmApiKeyModelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload>
          }
          findFirst: {
            args: Prisma.LlmApiKeyModelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LlmApiKeyModelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload>
          }
          findMany: {
            args: Prisma.LlmApiKeyModelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload>[]
          }
          create: {
            args: Prisma.LlmApiKeyModelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload>
          }
          createMany: {
            args: Prisma.LlmApiKeyModelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LlmApiKeyModelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload>[]
          }
          delete: {
            args: Prisma.LlmApiKeyModelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload>
          }
          update: {
            args: Prisma.LlmApiKeyModelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload>
          }
          deleteMany: {
            args: Prisma.LlmApiKeyModelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LlmApiKeyModelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LlmApiKeyModelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmApiKeyModelPayload>
          }
          aggregate: {
            args: Prisma.LlmApiKeyModelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLlmApiKeyModel>
          }
          groupBy: {
            args: Prisma.LlmApiKeyModelGroupByArgs<ExtArgs>
            result: $Utils.Optional<LlmApiKeyModelGroupByOutputType>[]
          }
          count: {
            args: Prisma.LlmApiKeyModelCountArgs<ExtArgs>
            result: $Utils.Optional<LlmApiKeyModelCountAggregateOutputType> | number
          }
        }
      }
      LocationModel: {
        payload: Prisma.$LocationModelPayload<ExtArgs>
        fields: Prisma.LocationModelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LocationModelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LocationModelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload>
          }
          findFirst: {
            args: Prisma.LocationModelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LocationModelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload>
          }
          findMany: {
            args: Prisma.LocationModelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload>[]
          }
          create: {
            args: Prisma.LocationModelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload>
          }
          createMany: {
            args: Prisma.LocationModelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LocationModelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload>[]
          }
          delete: {
            args: Prisma.LocationModelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload>
          }
          update: {
            args: Prisma.LocationModelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload>
          }
          deleteMany: {
            args: Prisma.LocationModelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LocationModelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LocationModelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationModelPayload>
          }
          aggregate: {
            args: Prisma.LocationModelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocationModel>
          }
          groupBy: {
            args: Prisma.LocationModelGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocationModelGroupByOutputType>[]
          }
          count: {
            args: Prisma.LocationModelCountArgs<ExtArgs>
            result: $Utils.Optional<LocationModelCountAggregateOutputType> | number
          }
        }
      }
      UserApiKeyModel: {
        payload: Prisma.$UserApiKeyModelPayload<ExtArgs>
        fields: Prisma.UserApiKeyModelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserApiKeyModelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserApiKeyModelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload>
          }
          findFirst: {
            args: Prisma.UserApiKeyModelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserApiKeyModelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload>
          }
          findMany: {
            args: Prisma.UserApiKeyModelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload>[]
          }
          create: {
            args: Prisma.UserApiKeyModelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload>
          }
          createMany: {
            args: Prisma.UserApiKeyModelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserApiKeyModelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload>[]
          }
          delete: {
            args: Prisma.UserApiKeyModelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload>
          }
          update: {
            args: Prisma.UserApiKeyModelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload>
          }
          deleteMany: {
            args: Prisma.UserApiKeyModelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserApiKeyModelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserApiKeyModelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiKeyModelPayload>
          }
          aggregate: {
            args: Prisma.UserApiKeyModelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserApiKeyModel>
          }
          groupBy: {
            args: Prisma.UserApiKeyModelGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserApiKeyModelGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserApiKeyModelCountArgs<ExtArgs>
            result: $Utils.Optional<UserApiKeyModelCountAggregateOutputType> | number
          }
        }
      }
      UserApiHistoryModel: {
        payload: Prisma.$UserApiHistoryModelPayload<ExtArgs>
        fields: Prisma.UserApiHistoryModelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserApiHistoryModelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserApiHistoryModelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload>
          }
          findFirst: {
            args: Prisma.UserApiHistoryModelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserApiHistoryModelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload>
          }
          findMany: {
            args: Prisma.UserApiHistoryModelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload>[]
          }
          create: {
            args: Prisma.UserApiHistoryModelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload>
          }
          createMany: {
            args: Prisma.UserApiHistoryModelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserApiHistoryModelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload>[]
          }
          delete: {
            args: Prisma.UserApiHistoryModelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload>
          }
          update: {
            args: Prisma.UserApiHistoryModelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload>
          }
          deleteMany: {
            args: Prisma.UserApiHistoryModelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserApiHistoryModelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserApiHistoryModelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserApiHistoryModelPayload>
          }
          aggregate: {
            args: Prisma.UserApiHistoryModelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserApiHistoryModel>
          }
          groupBy: {
            args: Prisma.UserApiHistoryModelGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserApiHistoryModelGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserApiHistoryModelCountArgs<ExtArgs>
            result: $Utils.Optional<UserApiHistoryModelCountAggregateOutputType> | number
          }
        }
      }
      UserModel: {
        payload: Prisma.$UserModelPayload<ExtArgs>
        fields: Prisma.UserModelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserModelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserModelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload>
          }
          findFirst: {
            args: Prisma.UserModelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserModelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload>
          }
          findMany: {
            args: Prisma.UserModelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload>[]
          }
          create: {
            args: Prisma.UserModelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload>
          }
          createMany: {
            args: Prisma.UserModelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserModelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload>[]
          }
          delete: {
            args: Prisma.UserModelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload>
          }
          update: {
            args: Prisma.UserModelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload>
          }
          deleteMany: {
            args: Prisma.UserModelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserModelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserModelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserModelPayload>
          }
          aggregate: {
            args: Prisma.UserModelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserModel>
          }
          groupBy: {
            args: Prisma.UserModelGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserModelGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserModelCountArgs<ExtArgs>
            result: $Utils.Optional<UserModelCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AgentModelCountOutputType
   */

  export type AgentModelCountOutputType = {
    llmApis: number
  }

  export type AgentModelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    llmApis?: boolean | AgentModelCountOutputTypeCountLlmApisArgs
  }

  // Custom InputTypes
  /**
   * AgentModelCountOutputType without action
   */
  export type AgentModelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModelCountOutputType
     */
    select?: AgentModelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AgentModelCountOutputType without action
   */
  export type AgentModelCountOutputTypeCountLlmApisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LlmApiModelWhereInput
  }


  /**
   * Count Type LlmApiModelCountOutputType
   */

  export type LlmApiModelCountOutputType = {
    agents: number
  }

  export type LlmApiModelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agents?: boolean | LlmApiModelCountOutputTypeCountAgentsArgs
  }

  // Custom InputTypes
  /**
   * LlmApiModelCountOutputType without action
   */
  export type LlmApiModelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModelCountOutputType
     */
    select?: LlmApiModelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LlmApiModelCountOutputType without action
   */
  export type LlmApiModelCountOutputTypeCountAgentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentModelWhereInput
  }


  /**
   * Count Type UserModelCountOutputType
   */

  export type UserModelCountOutputType = {
    apiHistories: number
    llmApiKeys: number
  }

  export type UserModelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    apiHistories?: boolean | UserModelCountOutputTypeCountApiHistoriesArgs
    llmApiKeys?: boolean | UserModelCountOutputTypeCountLlmApiKeysArgs
  }

  // Custom InputTypes
  /**
   * UserModelCountOutputType without action
   */
  export type UserModelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModelCountOutputType
     */
    select?: UserModelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserModelCountOutputType without action
   */
  export type UserModelCountOutputTypeCountApiHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserApiHistoryModelWhereInput
  }

  /**
   * UserModelCountOutputType without action
   */
  export type UserModelCountOutputTypeCountLlmApiKeysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LlmApiKeyModelWhereInput
  }


  /**
   * Models
   */

  /**
   * Model AgentModel
   */

  export type AggregateAgentModel = {
    _count: AgentModelCountAggregateOutputType | null
    _avg: AgentModelAvgAggregateOutputType | null
    _sum: AgentModelSumAggregateOutputType | null
    _min: AgentModelMinAggregateOutputType | null
    _max: AgentModelMaxAggregateOutputType | null
  }

  export type AgentModelAvgAggregateOutputType = {
    id: number | null
  }

  export type AgentModelSumAggregateOutputType = {
    id: number | null
  }

  export type AgentModelMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    core: string | null
  }

  export type AgentModelMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    core: string | null
  }

  export type AgentModelCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    name: number
    core: number
    meta: number
    _all: number
  }


  export type AgentModelAvgAggregateInputType = {
    id?: true
  }

  export type AgentModelSumAggregateInputType = {
    id?: true
  }

  export type AgentModelMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    core?: true
  }

  export type AgentModelMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    core?: true
  }

  export type AgentModelCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    core?: true
    meta?: true
    _all?: true
  }

  export type AgentModelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentModel to aggregate.
     */
    where?: AgentModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentModels to fetch.
     */
    orderBy?: AgentModelOrderByWithRelationInput | AgentModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgentModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgentModels
    **/
    _count?: true | AgentModelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgentModelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgentModelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgentModelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgentModelMaxAggregateInputType
  }

  export type GetAgentModelAggregateType<T extends AgentModelAggregateArgs> = {
        [P in keyof T & keyof AggregateAgentModel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgentModel[P]>
      : GetScalarType<T[P], AggregateAgentModel[P]>
  }




  export type AgentModelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentModelWhereInput
    orderBy?: AgentModelOrderByWithAggregationInput | AgentModelOrderByWithAggregationInput[]
    by: AgentModelScalarFieldEnum[] | AgentModelScalarFieldEnum
    having?: AgentModelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgentModelCountAggregateInputType | true
    _avg?: AgentModelAvgAggregateInputType
    _sum?: AgentModelSumAggregateInputType
    _min?: AgentModelMinAggregateInputType
    _max?: AgentModelMaxAggregateInputType
  }

  export type AgentModelGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    name: string
    core: string
    meta: JsonValue
    _count: AgentModelCountAggregateOutputType | null
    _avg: AgentModelAvgAggregateOutputType | null
    _sum: AgentModelSumAggregateOutputType | null
    _min: AgentModelMinAggregateOutputType | null
    _max: AgentModelMaxAggregateOutputType | null
  }

  type GetAgentModelGroupByPayload<T extends AgentModelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgentModelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgentModelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgentModelGroupByOutputType[P]>
            : GetScalarType<T[P], AgentModelGroupByOutputType[P]>
        }
      >
    >


  export type AgentModelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    core?: boolean
    meta?: boolean
    llmApis?: boolean | AgentModel$llmApisArgs<ExtArgs>
    _count?: boolean | AgentModelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentModel"]>

  export type AgentModelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    core?: boolean
    meta?: boolean
  }, ExtArgs["result"]["agentModel"]>

  export type AgentModelSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    core?: boolean
    meta?: boolean
  }

  export type AgentModelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    llmApis?: boolean | AgentModel$llmApisArgs<ExtArgs>
    _count?: boolean | AgentModelCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AgentModelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AgentModelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgentModel"
    objects: {
      llmApis: Prisma.$LlmApiModelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      name: string
      core: string
      meta: Prisma.JsonValue
    }, ExtArgs["result"]["agentModel"]>
    composites: {}
  }

  type AgentModelGetPayload<S extends boolean | null | undefined | AgentModelDefaultArgs> = $Result.GetResult<Prisma.$AgentModelPayload, S>

  type AgentModelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgentModelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgentModelCountAggregateInputType | true
    }

  export interface AgentModelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgentModel'], meta: { name: 'AgentModel' } }
    /**
     * Find zero or one AgentModel that matches the filter.
     * @param {AgentModelFindUniqueArgs} args - Arguments to find a AgentModel
     * @example
     * // Get one AgentModel
     * const agentModel = await prisma.agentModel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgentModelFindUniqueArgs>(args: SelectSubset<T, AgentModelFindUniqueArgs<ExtArgs>>): Prisma__AgentModelClient<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AgentModel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgentModelFindUniqueOrThrowArgs} args - Arguments to find a AgentModel
     * @example
     * // Get one AgentModel
     * const agentModel = await prisma.agentModel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgentModelFindUniqueOrThrowArgs>(args: SelectSubset<T, AgentModelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgentModelClient<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AgentModel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentModelFindFirstArgs} args - Arguments to find a AgentModel
     * @example
     * // Get one AgentModel
     * const agentModel = await prisma.agentModel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgentModelFindFirstArgs>(args?: SelectSubset<T, AgentModelFindFirstArgs<ExtArgs>>): Prisma__AgentModelClient<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AgentModel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentModelFindFirstOrThrowArgs} args - Arguments to find a AgentModel
     * @example
     * // Get one AgentModel
     * const agentModel = await prisma.agentModel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgentModelFindFirstOrThrowArgs>(args?: SelectSubset<T, AgentModelFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgentModelClient<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AgentModels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentModelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgentModels
     * const agentModels = await prisma.agentModel.findMany()
     * 
     * // Get first 10 AgentModels
     * const agentModels = await prisma.agentModel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agentModelWithIdOnly = await prisma.agentModel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgentModelFindManyArgs>(args?: SelectSubset<T, AgentModelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AgentModel.
     * @param {AgentModelCreateArgs} args - Arguments to create a AgentModel.
     * @example
     * // Create one AgentModel
     * const AgentModel = await prisma.agentModel.create({
     *   data: {
     *     // ... data to create a AgentModel
     *   }
     * })
     * 
     */
    create<T extends AgentModelCreateArgs>(args: SelectSubset<T, AgentModelCreateArgs<ExtArgs>>): Prisma__AgentModelClient<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AgentModels.
     * @param {AgentModelCreateManyArgs} args - Arguments to create many AgentModels.
     * @example
     * // Create many AgentModels
     * const agentModel = await prisma.agentModel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgentModelCreateManyArgs>(args?: SelectSubset<T, AgentModelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgentModels and returns the data saved in the database.
     * @param {AgentModelCreateManyAndReturnArgs} args - Arguments to create many AgentModels.
     * @example
     * // Create many AgentModels
     * const agentModel = await prisma.agentModel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgentModels and only return the `id`
     * const agentModelWithIdOnly = await prisma.agentModel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgentModelCreateManyAndReturnArgs>(args?: SelectSubset<T, AgentModelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AgentModel.
     * @param {AgentModelDeleteArgs} args - Arguments to delete one AgentModel.
     * @example
     * // Delete one AgentModel
     * const AgentModel = await prisma.agentModel.delete({
     *   where: {
     *     // ... filter to delete one AgentModel
     *   }
     * })
     * 
     */
    delete<T extends AgentModelDeleteArgs>(args: SelectSubset<T, AgentModelDeleteArgs<ExtArgs>>): Prisma__AgentModelClient<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AgentModel.
     * @param {AgentModelUpdateArgs} args - Arguments to update one AgentModel.
     * @example
     * // Update one AgentModel
     * const agentModel = await prisma.agentModel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgentModelUpdateArgs>(args: SelectSubset<T, AgentModelUpdateArgs<ExtArgs>>): Prisma__AgentModelClient<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AgentModels.
     * @param {AgentModelDeleteManyArgs} args - Arguments to filter AgentModels to delete.
     * @example
     * // Delete a few AgentModels
     * const { count } = await prisma.agentModel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgentModelDeleteManyArgs>(args?: SelectSubset<T, AgentModelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgentModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentModelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgentModels
     * const agentModel = await prisma.agentModel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgentModelUpdateManyArgs>(args: SelectSubset<T, AgentModelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AgentModel.
     * @param {AgentModelUpsertArgs} args - Arguments to update or create a AgentModel.
     * @example
     * // Update or create a AgentModel
     * const agentModel = await prisma.agentModel.upsert({
     *   create: {
     *     // ... data to create a AgentModel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgentModel we want to update
     *   }
     * })
     */
    upsert<T extends AgentModelUpsertArgs>(args: SelectSubset<T, AgentModelUpsertArgs<ExtArgs>>): Prisma__AgentModelClient<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AgentModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentModelCountArgs} args - Arguments to filter AgentModels to count.
     * @example
     * // Count the number of AgentModels
     * const count = await prisma.agentModel.count({
     *   where: {
     *     // ... the filter for the AgentModels we want to count
     *   }
     * })
    **/
    count<T extends AgentModelCountArgs>(
      args?: Subset<T, AgentModelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgentModelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgentModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentModelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgentModelAggregateArgs>(args: Subset<T, AgentModelAggregateArgs>): Prisma.PrismaPromise<GetAgentModelAggregateType<T>>

    /**
     * Group by AgentModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentModelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgentModelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgentModelGroupByArgs['orderBy'] }
        : { orderBy?: AgentModelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgentModelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgentModelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgentModel model
   */
  readonly fields: AgentModelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgentModel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgentModelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    llmApis<T extends AgentModel$llmApisArgs<ExtArgs> = {}>(args?: Subset<T, AgentModel$llmApisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgentModel model
   */ 
  interface AgentModelFieldRefs {
    readonly id: FieldRef<"AgentModel", 'Int'>
    readonly createdAt: FieldRef<"AgentModel", 'DateTime'>
    readonly updatedAt: FieldRef<"AgentModel", 'DateTime'>
    readonly name: FieldRef<"AgentModel", 'String'>
    readonly core: FieldRef<"AgentModel", 'String'>
    readonly meta: FieldRef<"AgentModel", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * AgentModel findUnique
   */
  export type AgentModelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * Filter, which AgentModel to fetch.
     */
    where: AgentModelWhereUniqueInput
  }

  /**
   * AgentModel findUniqueOrThrow
   */
  export type AgentModelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * Filter, which AgentModel to fetch.
     */
    where: AgentModelWhereUniqueInput
  }

  /**
   * AgentModel findFirst
   */
  export type AgentModelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * Filter, which AgentModel to fetch.
     */
    where?: AgentModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentModels to fetch.
     */
    orderBy?: AgentModelOrderByWithRelationInput | AgentModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentModels.
     */
    cursor?: AgentModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentModels.
     */
    distinct?: AgentModelScalarFieldEnum | AgentModelScalarFieldEnum[]
  }

  /**
   * AgentModel findFirstOrThrow
   */
  export type AgentModelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * Filter, which AgentModel to fetch.
     */
    where?: AgentModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentModels to fetch.
     */
    orderBy?: AgentModelOrderByWithRelationInput | AgentModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentModels.
     */
    cursor?: AgentModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentModels.
     */
    distinct?: AgentModelScalarFieldEnum | AgentModelScalarFieldEnum[]
  }

  /**
   * AgentModel findMany
   */
  export type AgentModelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * Filter, which AgentModels to fetch.
     */
    where?: AgentModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentModels to fetch.
     */
    orderBy?: AgentModelOrderByWithRelationInput | AgentModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgentModels.
     */
    cursor?: AgentModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentModels.
     */
    skip?: number
    distinct?: AgentModelScalarFieldEnum | AgentModelScalarFieldEnum[]
  }

  /**
   * AgentModel create
   */
  export type AgentModelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * The data needed to create a AgentModel.
     */
    data: XOR<AgentModelCreateInput, AgentModelUncheckedCreateInput>
  }

  /**
   * AgentModel createMany
   */
  export type AgentModelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgentModels.
     */
    data: AgentModelCreateManyInput | AgentModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgentModel createManyAndReturn
   */
  export type AgentModelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AgentModels.
     */
    data: AgentModelCreateManyInput | AgentModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgentModel update
   */
  export type AgentModelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * The data needed to update a AgentModel.
     */
    data: XOR<AgentModelUpdateInput, AgentModelUncheckedUpdateInput>
    /**
     * Choose, which AgentModel to update.
     */
    where: AgentModelWhereUniqueInput
  }

  /**
   * AgentModel updateMany
   */
  export type AgentModelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgentModels.
     */
    data: XOR<AgentModelUpdateManyMutationInput, AgentModelUncheckedUpdateManyInput>
    /**
     * Filter which AgentModels to update
     */
    where?: AgentModelWhereInput
  }

  /**
   * AgentModel upsert
   */
  export type AgentModelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * The filter to search for the AgentModel to update in case it exists.
     */
    where: AgentModelWhereUniqueInput
    /**
     * In case the AgentModel found by the `where` argument doesn't exist, create a new AgentModel with this data.
     */
    create: XOR<AgentModelCreateInput, AgentModelUncheckedCreateInput>
    /**
     * In case the AgentModel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgentModelUpdateInput, AgentModelUncheckedUpdateInput>
  }

  /**
   * AgentModel delete
   */
  export type AgentModelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    /**
     * Filter which AgentModel to delete.
     */
    where: AgentModelWhereUniqueInput
  }

  /**
   * AgentModel deleteMany
   */
  export type AgentModelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentModels to delete
     */
    where?: AgentModelWhereInput
  }

  /**
   * AgentModel.llmApis
   */
  export type AgentModel$llmApisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    where?: LlmApiModelWhereInput
    orderBy?: LlmApiModelOrderByWithRelationInput | LlmApiModelOrderByWithRelationInput[]
    cursor?: LlmApiModelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LlmApiModelScalarFieldEnum | LlmApiModelScalarFieldEnum[]
  }

  /**
   * AgentModel without action
   */
  export type AgentModelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
  }


  /**
   * Model LlmApiModel
   */

  export type AggregateLlmApiModel = {
    _count: LlmApiModelCountAggregateOutputType | null
    _avg: LlmApiModelAvgAggregateOutputType | null
    _sum: LlmApiModelSumAggregateOutputType | null
    _min: LlmApiModelMinAggregateOutputType | null
    _max: LlmApiModelMaxAggregateOutputType | null
  }

  export type LlmApiModelAvgAggregateOutputType = {
    id: number | null
  }

  export type LlmApiModelSumAggregateOutputType = {
    id: number | null
  }

  export type LlmApiModelMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    platform: $Enums.LLMPlatform | null
    model: string | null
  }

  export type LlmApiModelMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    platform: $Enums.LLMPlatform | null
    model: string | null
  }

  export type LlmApiModelCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    platform: number
    model: number
    _all: number
  }


  export type LlmApiModelAvgAggregateInputType = {
    id?: true
  }

  export type LlmApiModelSumAggregateInputType = {
    id?: true
  }

  export type LlmApiModelMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    platform?: true
    model?: true
  }

  export type LlmApiModelMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    platform?: true
    model?: true
  }

  export type LlmApiModelCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    platform?: true
    model?: true
    _all?: true
  }

  export type LlmApiModelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LlmApiModel to aggregate.
     */
    where?: LlmApiModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmApiModels to fetch.
     */
    orderBy?: LlmApiModelOrderByWithRelationInput | LlmApiModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LlmApiModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmApiModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmApiModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LlmApiModels
    **/
    _count?: true | LlmApiModelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LlmApiModelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LlmApiModelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LlmApiModelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LlmApiModelMaxAggregateInputType
  }

  export type GetLlmApiModelAggregateType<T extends LlmApiModelAggregateArgs> = {
        [P in keyof T & keyof AggregateLlmApiModel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLlmApiModel[P]>
      : GetScalarType<T[P], AggregateLlmApiModel[P]>
  }




  export type LlmApiModelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LlmApiModelWhereInput
    orderBy?: LlmApiModelOrderByWithAggregationInput | LlmApiModelOrderByWithAggregationInput[]
    by: LlmApiModelScalarFieldEnum[] | LlmApiModelScalarFieldEnum
    having?: LlmApiModelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LlmApiModelCountAggregateInputType | true
    _avg?: LlmApiModelAvgAggregateInputType
    _sum?: LlmApiModelSumAggregateInputType
    _min?: LlmApiModelMinAggregateInputType
    _max?: LlmApiModelMaxAggregateInputType
  }

  export type LlmApiModelGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    platform: $Enums.LLMPlatform
    model: string
    _count: LlmApiModelCountAggregateOutputType | null
    _avg: LlmApiModelAvgAggregateOutputType | null
    _sum: LlmApiModelSumAggregateOutputType | null
    _min: LlmApiModelMinAggregateOutputType | null
    _max: LlmApiModelMaxAggregateOutputType | null
  }

  type GetLlmApiModelGroupByPayload<T extends LlmApiModelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LlmApiModelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LlmApiModelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LlmApiModelGroupByOutputType[P]>
            : GetScalarType<T[P], LlmApiModelGroupByOutputType[P]>
        }
      >
    >


  export type LlmApiModelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    platform?: boolean
    model?: boolean
    agents?: boolean | LlmApiModel$agentsArgs<ExtArgs>
    _count?: boolean | LlmApiModelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["llmApiModel"]>

  export type LlmApiModelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    platform?: boolean
    model?: boolean
  }, ExtArgs["result"]["llmApiModel"]>

  export type LlmApiModelSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    platform?: boolean
    model?: boolean
  }

  export type LlmApiModelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agents?: boolean | LlmApiModel$agentsArgs<ExtArgs>
    _count?: boolean | LlmApiModelCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LlmApiModelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LlmApiModelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LlmApiModel"
    objects: {
      agents: Prisma.$AgentModelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      platform: $Enums.LLMPlatform
      model: string
    }, ExtArgs["result"]["llmApiModel"]>
    composites: {}
  }

  type LlmApiModelGetPayload<S extends boolean | null | undefined | LlmApiModelDefaultArgs> = $Result.GetResult<Prisma.$LlmApiModelPayload, S>

  type LlmApiModelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LlmApiModelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LlmApiModelCountAggregateInputType | true
    }

  export interface LlmApiModelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LlmApiModel'], meta: { name: 'LlmApiModel' } }
    /**
     * Find zero or one LlmApiModel that matches the filter.
     * @param {LlmApiModelFindUniqueArgs} args - Arguments to find a LlmApiModel
     * @example
     * // Get one LlmApiModel
     * const llmApiModel = await prisma.llmApiModel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LlmApiModelFindUniqueArgs>(args: SelectSubset<T, LlmApiModelFindUniqueArgs<ExtArgs>>): Prisma__LlmApiModelClient<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one LlmApiModel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LlmApiModelFindUniqueOrThrowArgs} args - Arguments to find a LlmApiModel
     * @example
     * // Get one LlmApiModel
     * const llmApiModel = await prisma.llmApiModel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LlmApiModelFindUniqueOrThrowArgs>(args: SelectSubset<T, LlmApiModelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LlmApiModelClient<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first LlmApiModel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiModelFindFirstArgs} args - Arguments to find a LlmApiModel
     * @example
     * // Get one LlmApiModel
     * const llmApiModel = await prisma.llmApiModel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LlmApiModelFindFirstArgs>(args?: SelectSubset<T, LlmApiModelFindFirstArgs<ExtArgs>>): Prisma__LlmApiModelClient<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first LlmApiModel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiModelFindFirstOrThrowArgs} args - Arguments to find a LlmApiModel
     * @example
     * // Get one LlmApiModel
     * const llmApiModel = await prisma.llmApiModel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LlmApiModelFindFirstOrThrowArgs>(args?: SelectSubset<T, LlmApiModelFindFirstOrThrowArgs<ExtArgs>>): Prisma__LlmApiModelClient<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more LlmApiModels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiModelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LlmApiModels
     * const llmApiModels = await prisma.llmApiModel.findMany()
     * 
     * // Get first 10 LlmApiModels
     * const llmApiModels = await prisma.llmApiModel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const llmApiModelWithIdOnly = await prisma.llmApiModel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LlmApiModelFindManyArgs>(args?: SelectSubset<T, LlmApiModelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a LlmApiModel.
     * @param {LlmApiModelCreateArgs} args - Arguments to create a LlmApiModel.
     * @example
     * // Create one LlmApiModel
     * const LlmApiModel = await prisma.llmApiModel.create({
     *   data: {
     *     // ... data to create a LlmApiModel
     *   }
     * })
     * 
     */
    create<T extends LlmApiModelCreateArgs>(args: SelectSubset<T, LlmApiModelCreateArgs<ExtArgs>>): Prisma__LlmApiModelClient<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many LlmApiModels.
     * @param {LlmApiModelCreateManyArgs} args - Arguments to create many LlmApiModels.
     * @example
     * // Create many LlmApiModels
     * const llmApiModel = await prisma.llmApiModel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LlmApiModelCreateManyArgs>(args?: SelectSubset<T, LlmApiModelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LlmApiModels and returns the data saved in the database.
     * @param {LlmApiModelCreateManyAndReturnArgs} args - Arguments to create many LlmApiModels.
     * @example
     * // Create many LlmApiModels
     * const llmApiModel = await prisma.llmApiModel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LlmApiModels and only return the `id`
     * const llmApiModelWithIdOnly = await prisma.llmApiModel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LlmApiModelCreateManyAndReturnArgs>(args?: SelectSubset<T, LlmApiModelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a LlmApiModel.
     * @param {LlmApiModelDeleteArgs} args - Arguments to delete one LlmApiModel.
     * @example
     * // Delete one LlmApiModel
     * const LlmApiModel = await prisma.llmApiModel.delete({
     *   where: {
     *     // ... filter to delete one LlmApiModel
     *   }
     * })
     * 
     */
    delete<T extends LlmApiModelDeleteArgs>(args: SelectSubset<T, LlmApiModelDeleteArgs<ExtArgs>>): Prisma__LlmApiModelClient<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one LlmApiModel.
     * @param {LlmApiModelUpdateArgs} args - Arguments to update one LlmApiModel.
     * @example
     * // Update one LlmApiModel
     * const llmApiModel = await prisma.llmApiModel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LlmApiModelUpdateArgs>(args: SelectSubset<T, LlmApiModelUpdateArgs<ExtArgs>>): Prisma__LlmApiModelClient<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more LlmApiModels.
     * @param {LlmApiModelDeleteManyArgs} args - Arguments to filter LlmApiModels to delete.
     * @example
     * // Delete a few LlmApiModels
     * const { count } = await prisma.llmApiModel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LlmApiModelDeleteManyArgs>(args?: SelectSubset<T, LlmApiModelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LlmApiModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiModelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LlmApiModels
     * const llmApiModel = await prisma.llmApiModel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LlmApiModelUpdateManyArgs>(args: SelectSubset<T, LlmApiModelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LlmApiModel.
     * @param {LlmApiModelUpsertArgs} args - Arguments to update or create a LlmApiModel.
     * @example
     * // Update or create a LlmApiModel
     * const llmApiModel = await prisma.llmApiModel.upsert({
     *   create: {
     *     // ... data to create a LlmApiModel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LlmApiModel we want to update
     *   }
     * })
     */
    upsert<T extends LlmApiModelUpsertArgs>(args: SelectSubset<T, LlmApiModelUpsertArgs<ExtArgs>>): Prisma__LlmApiModelClient<$Result.GetResult<Prisma.$LlmApiModelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of LlmApiModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiModelCountArgs} args - Arguments to filter LlmApiModels to count.
     * @example
     * // Count the number of LlmApiModels
     * const count = await prisma.llmApiModel.count({
     *   where: {
     *     // ... the filter for the LlmApiModels we want to count
     *   }
     * })
    **/
    count<T extends LlmApiModelCountArgs>(
      args?: Subset<T, LlmApiModelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LlmApiModelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LlmApiModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiModelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LlmApiModelAggregateArgs>(args: Subset<T, LlmApiModelAggregateArgs>): Prisma.PrismaPromise<GetLlmApiModelAggregateType<T>>

    /**
     * Group by LlmApiModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiModelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LlmApiModelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LlmApiModelGroupByArgs['orderBy'] }
        : { orderBy?: LlmApiModelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LlmApiModelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLlmApiModelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LlmApiModel model
   */
  readonly fields: LlmApiModelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LlmApiModel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LlmApiModelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agents<T extends LlmApiModel$agentsArgs<ExtArgs> = {}>(args?: Subset<T, LlmApiModel$agentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentModelPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LlmApiModel model
   */ 
  interface LlmApiModelFieldRefs {
    readonly id: FieldRef<"LlmApiModel", 'Int'>
    readonly createdAt: FieldRef<"LlmApiModel", 'DateTime'>
    readonly updatedAt: FieldRef<"LlmApiModel", 'DateTime'>
    readonly platform: FieldRef<"LlmApiModel", 'LLMPlatform'>
    readonly model: FieldRef<"LlmApiModel", 'String'>
  }
    

  // Custom InputTypes
  /**
   * LlmApiModel findUnique
   */
  export type LlmApiModelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiModel to fetch.
     */
    where: LlmApiModelWhereUniqueInput
  }

  /**
   * LlmApiModel findUniqueOrThrow
   */
  export type LlmApiModelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiModel to fetch.
     */
    where: LlmApiModelWhereUniqueInput
  }

  /**
   * LlmApiModel findFirst
   */
  export type LlmApiModelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiModel to fetch.
     */
    where?: LlmApiModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmApiModels to fetch.
     */
    orderBy?: LlmApiModelOrderByWithRelationInput | LlmApiModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LlmApiModels.
     */
    cursor?: LlmApiModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmApiModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmApiModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LlmApiModels.
     */
    distinct?: LlmApiModelScalarFieldEnum | LlmApiModelScalarFieldEnum[]
  }

  /**
   * LlmApiModel findFirstOrThrow
   */
  export type LlmApiModelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiModel to fetch.
     */
    where?: LlmApiModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmApiModels to fetch.
     */
    orderBy?: LlmApiModelOrderByWithRelationInput | LlmApiModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LlmApiModels.
     */
    cursor?: LlmApiModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmApiModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmApiModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LlmApiModels.
     */
    distinct?: LlmApiModelScalarFieldEnum | LlmApiModelScalarFieldEnum[]
  }

  /**
   * LlmApiModel findMany
   */
  export type LlmApiModelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiModels to fetch.
     */
    where?: LlmApiModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmApiModels to fetch.
     */
    orderBy?: LlmApiModelOrderByWithRelationInput | LlmApiModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LlmApiModels.
     */
    cursor?: LlmApiModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmApiModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmApiModels.
     */
    skip?: number
    distinct?: LlmApiModelScalarFieldEnum | LlmApiModelScalarFieldEnum[]
  }

  /**
   * LlmApiModel create
   */
  export type LlmApiModelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * The data needed to create a LlmApiModel.
     */
    data: XOR<LlmApiModelCreateInput, LlmApiModelUncheckedCreateInput>
  }

  /**
   * LlmApiModel createMany
   */
  export type LlmApiModelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LlmApiModels.
     */
    data: LlmApiModelCreateManyInput | LlmApiModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LlmApiModel createManyAndReturn
   */
  export type LlmApiModelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many LlmApiModels.
     */
    data: LlmApiModelCreateManyInput | LlmApiModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LlmApiModel update
   */
  export type LlmApiModelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * The data needed to update a LlmApiModel.
     */
    data: XOR<LlmApiModelUpdateInput, LlmApiModelUncheckedUpdateInput>
    /**
     * Choose, which LlmApiModel to update.
     */
    where: LlmApiModelWhereUniqueInput
  }

  /**
   * LlmApiModel updateMany
   */
  export type LlmApiModelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LlmApiModels.
     */
    data: XOR<LlmApiModelUpdateManyMutationInput, LlmApiModelUncheckedUpdateManyInput>
    /**
     * Filter which LlmApiModels to update
     */
    where?: LlmApiModelWhereInput
  }

  /**
   * LlmApiModel upsert
   */
  export type LlmApiModelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * The filter to search for the LlmApiModel to update in case it exists.
     */
    where: LlmApiModelWhereUniqueInput
    /**
     * In case the LlmApiModel found by the `where` argument doesn't exist, create a new LlmApiModel with this data.
     */
    create: XOR<LlmApiModelCreateInput, LlmApiModelUncheckedCreateInput>
    /**
     * In case the LlmApiModel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LlmApiModelUpdateInput, LlmApiModelUncheckedUpdateInput>
  }

  /**
   * LlmApiModel delete
   */
  export type LlmApiModelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
    /**
     * Filter which LlmApiModel to delete.
     */
    where: LlmApiModelWhereUniqueInput
  }

  /**
   * LlmApiModel deleteMany
   */
  export type LlmApiModelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LlmApiModels to delete
     */
    where?: LlmApiModelWhereInput
  }

  /**
   * LlmApiModel.agents
   */
  export type LlmApiModel$agentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentModel
     */
    select?: AgentModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentModelInclude<ExtArgs> | null
    where?: AgentModelWhereInput
    orderBy?: AgentModelOrderByWithRelationInput | AgentModelOrderByWithRelationInput[]
    cursor?: AgentModelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgentModelScalarFieldEnum | AgentModelScalarFieldEnum[]
  }

  /**
   * LlmApiModel without action
   */
  export type LlmApiModelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiModel
     */
    select?: LlmApiModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiModelInclude<ExtArgs> | null
  }


  /**
   * Model LlmApiKeyModel
   */

  export type AggregateLlmApiKeyModel = {
    _count: LlmApiKeyModelCountAggregateOutputType | null
    _avg: LlmApiKeyModelAvgAggregateOutputType | null
    _sum: LlmApiKeyModelSumAggregateOutputType | null
    _min: LlmApiKeyModelMinAggregateOutputType | null
    _max: LlmApiKeyModelMaxAggregateOutputType | null
  }

  export type LlmApiKeyModelAvgAggregateOutputType = {
    id: number | null
    userModelId: number | null
  }

  export type LlmApiKeyModelSumAggregateOutputType = {
    id: number | null
    userModelId: number | null
  }

  export type LlmApiKeyModelMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    userModelId: number | null
    platform: $Enums.LLMPlatform | null
    key: string | null
  }

  export type LlmApiKeyModelMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    userModelId: number | null
    platform: $Enums.LLMPlatform | null
    key: string | null
  }

  export type LlmApiKeyModelCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    userModelId: number
    platform: number
    key: number
    _all: number
  }


  export type LlmApiKeyModelAvgAggregateInputType = {
    id?: true
    userModelId?: true
  }

  export type LlmApiKeyModelSumAggregateInputType = {
    id?: true
    userModelId?: true
  }

  export type LlmApiKeyModelMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
    platform?: true
    key?: true
  }

  export type LlmApiKeyModelMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
    platform?: true
    key?: true
  }

  export type LlmApiKeyModelCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
    platform?: true
    key?: true
    _all?: true
  }

  export type LlmApiKeyModelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LlmApiKeyModel to aggregate.
     */
    where?: LlmApiKeyModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmApiKeyModels to fetch.
     */
    orderBy?: LlmApiKeyModelOrderByWithRelationInput | LlmApiKeyModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LlmApiKeyModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmApiKeyModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmApiKeyModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LlmApiKeyModels
    **/
    _count?: true | LlmApiKeyModelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LlmApiKeyModelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LlmApiKeyModelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LlmApiKeyModelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LlmApiKeyModelMaxAggregateInputType
  }

  export type GetLlmApiKeyModelAggregateType<T extends LlmApiKeyModelAggregateArgs> = {
        [P in keyof T & keyof AggregateLlmApiKeyModel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLlmApiKeyModel[P]>
      : GetScalarType<T[P], AggregateLlmApiKeyModel[P]>
  }




  export type LlmApiKeyModelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LlmApiKeyModelWhereInput
    orderBy?: LlmApiKeyModelOrderByWithAggregationInput | LlmApiKeyModelOrderByWithAggregationInput[]
    by: LlmApiKeyModelScalarFieldEnum[] | LlmApiKeyModelScalarFieldEnum
    having?: LlmApiKeyModelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LlmApiKeyModelCountAggregateInputType | true
    _avg?: LlmApiKeyModelAvgAggregateInputType
    _sum?: LlmApiKeyModelSumAggregateInputType
    _min?: LlmApiKeyModelMinAggregateInputType
    _max?: LlmApiKeyModelMaxAggregateInputType
  }

  export type LlmApiKeyModelGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    userModelId: number | null
    platform: $Enums.LLMPlatform
    key: string
    _count: LlmApiKeyModelCountAggregateOutputType | null
    _avg: LlmApiKeyModelAvgAggregateOutputType | null
    _sum: LlmApiKeyModelSumAggregateOutputType | null
    _min: LlmApiKeyModelMinAggregateOutputType | null
    _max: LlmApiKeyModelMaxAggregateOutputType | null
  }

  type GetLlmApiKeyModelGroupByPayload<T extends LlmApiKeyModelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LlmApiKeyModelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LlmApiKeyModelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LlmApiKeyModelGroupByOutputType[P]>
            : GetScalarType<T[P], LlmApiKeyModelGroupByOutputType[P]>
        }
      >
    >


  export type LlmApiKeyModelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    platform?: boolean
    key?: boolean
    userModel?: boolean | LlmApiKeyModel$userModelArgs<ExtArgs>
  }, ExtArgs["result"]["llmApiKeyModel"]>

  export type LlmApiKeyModelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    platform?: boolean
    key?: boolean
    userModel?: boolean | LlmApiKeyModel$userModelArgs<ExtArgs>
  }, ExtArgs["result"]["llmApiKeyModel"]>

  export type LlmApiKeyModelSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    platform?: boolean
    key?: boolean
  }

  export type LlmApiKeyModelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userModel?: boolean | LlmApiKeyModel$userModelArgs<ExtArgs>
  }
  export type LlmApiKeyModelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userModel?: boolean | LlmApiKeyModel$userModelArgs<ExtArgs>
  }

  export type $LlmApiKeyModelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LlmApiKeyModel"
    objects: {
      userModel: Prisma.$UserModelPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      userModelId: number | null
      platform: $Enums.LLMPlatform
      key: string
    }, ExtArgs["result"]["llmApiKeyModel"]>
    composites: {}
  }

  type LlmApiKeyModelGetPayload<S extends boolean | null | undefined | LlmApiKeyModelDefaultArgs> = $Result.GetResult<Prisma.$LlmApiKeyModelPayload, S>

  type LlmApiKeyModelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LlmApiKeyModelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LlmApiKeyModelCountAggregateInputType | true
    }

  export interface LlmApiKeyModelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LlmApiKeyModel'], meta: { name: 'LlmApiKeyModel' } }
    /**
     * Find zero or one LlmApiKeyModel that matches the filter.
     * @param {LlmApiKeyModelFindUniqueArgs} args - Arguments to find a LlmApiKeyModel
     * @example
     * // Get one LlmApiKeyModel
     * const llmApiKeyModel = await prisma.llmApiKeyModel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LlmApiKeyModelFindUniqueArgs>(args: SelectSubset<T, LlmApiKeyModelFindUniqueArgs<ExtArgs>>): Prisma__LlmApiKeyModelClient<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one LlmApiKeyModel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LlmApiKeyModelFindUniqueOrThrowArgs} args - Arguments to find a LlmApiKeyModel
     * @example
     * // Get one LlmApiKeyModel
     * const llmApiKeyModel = await prisma.llmApiKeyModel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LlmApiKeyModelFindUniqueOrThrowArgs>(args: SelectSubset<T, LlmApiKeyModelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LlmApiKeyModelClient<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first LlmApiKeyModel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiKeyModelFindFirstArgs} args - Arguments to find a LlmApiKeyModel
     * @example
     * // Get one LlmApiKeyModel
     * const llmApiKeyModel = await prisma.llmApiKeyModel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LlmApiKeyModelFindFirstArgs>(args?: SelectSubset<T, LlmApiKeyModelFindFirstArgs<ExtArgs>>): Prisma__LlmApiKeyModelClient<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first LlmApiKeyModel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiKeyModelFindFirstOrThrowArgs} args - Arguments to find a LlmApiKeyModel
     * @example
     * // Get one LlmApiKeyModel
     * const llmApiKeyModel = await prisma.llmApiKeyModel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LlmApiKeyModelFindFirstOrThrowArgs>(args?: SelectSubset<T, LlmApiKeyModelFindFirstOrThrowArgs<ExtArgs>>): Prisma__LlmApiKeyModelClient<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more LlmApiKeyModels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiKeyModelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LlmApiKeyModels
     * const llmApiKeyModels = await prisma.llmApiKeyModel.findMany()
     * 
     * // Get first 10 LlmApiKeyModels
     * const llmApiKeyModels = await prisma.llmApiKeyModel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const llmApiKeyModelWithIdOnly = await prisma.llmApiKeyModel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LlmApiKeyModelFindManyArgs>(args?: SelectSubset<T, LlmApiKeyModelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a LlmApiKeyModel.
     * @param {LlmApiKeyModelCreateArgs} args - Arguments to create a LlmApiKeyModel.
     * @example
     * // Create one LlmApiKeyModel
     * const LlmApiKeyModel = await prisma.llmApiKeyModel.create({
     *   data: {
     *     // ... data to create a LlmApiKeyModel
     *   }
     * })
     * 
     */
    create<T extends LlmApiKeyModelCreateArgs>(args: SelectSubset<T, LlmApiKeyModelCreateArgs<ExtArgs>>): Prisma__LlmApiKeyModelClient<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many LlmApiKeyModels.
     * @param {LlmApiKeyModelCreateManyArgs} args - Arguments to create many LlmApiKeyModels.
     * @example
     * // Create many LlmApiKeyModels
     * const llmApiKeyModel = await prisma.llmApiKeyModel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LlmApiKeyModelCreateManyArgs>(args?: SelectSubset<T, LlmApiKeyModelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LlmApiKeyModels and returns the data saved in the database.
     * @param {LlmApiKeyModelCreateManyAndReturnArgs} args - Arguments to create many LlmApiKeyModels.
     * @example
     * // Create many LlmApiKeyModels
     * const llmApiKeyModel = await prisma.llmApiKeyModel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LlmApiKeyModels and only return the `id`
     * const llmApiKeyModelWithIdOnly = await prisma.llmApiKeyModel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LlmApiKeyModelCreateManyAndReturnArgs>(args?: SelectSubset<T, LlmApiKeyModelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a LlmApiKeyModel.
     * @param {LlmApiKeyModelDeleteArgs} args - Arguments to delete one LlmApiKeyModel.
     * @example
     * // Delete one LlmApiKeyModel
     * const LlmApiKeyModel = await prisma.llmApiKeyModel.delete({
     *   where: {
     *     // ... filter to delete one LlmApiKeyModel
     *   }
     * })
     * 
     */
    delete<T extends LlmApiKeyModelDeleteArgs>(args: SelectSubset<T, LlmApiKeyModelDeleteArgs<ExtArgs>>): Prisma__LlmApiKeyModelClient<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one LlmApiKeyModel.
     * @param {LlmApiKeyModelUpdateArgs} args - Arguments to update one LlmApiKeyModel.
     * @example
     * // Update one LlmApiKeyModel
     * const llmApiKeyModel = await prisma.llmApiKeyModel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LlmApiKeyModelUpdateArgs>(args: SelectSubset<T, LlmApiKeyModelUpdateArgs<ExtArgs>>): Prisma__LlmApiKeyModelClient<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more LlmApiKeyModels.
     * @param {LlmApiKeyModelDeleteManyArgs} args - Arguments to filter LlmApiKeyModels to delete.
     * @example
     * // Delete a few LlmApiKeyModels
     * const { count } = await prisma.llmApiKeyModel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LlmApiKeyModelDeleteManyArgs>(args?: SelectSubset<T, LlmApiKeyModelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LlmApiKeyModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiKeyModelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LlmApiKeyModels
     * const llmApiKeyModel = await prisma.llmApiKeyModel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LlmApiKeyModelUpdateManyArgs>(args: SelectSubset<T, LlmApiKeyModelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LlmApiKeyModel.
     * @param {LlmApiKeyModelUpsertArgs} args - Arguments to update or create a LlmApiKeyModel.
     * @example
     * // Update or create a LlmApiKeyModel
     * const llmApiKeyModel = await prisma.llmApiKeyModel.upsert({
     *   create: {
     *     // ... data to create a LlmApiKeyModel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LlmApiKeyModel we want to update
     *   }
     * })
     */
    upsert<T extends LlmApiKeyModelUpsertArgs>(args: SelectSubset<T, LlmApiKeyModelUpsertArgs<ExtArgs>>): Prisma__LlmApiKeyModelClient<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of LlmApiKeyModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiKeyModelCountArgs} args - Arguments to filter LlmApiKeyModels to count.
     * @example
     * // Count the number of LlmApiKeyModels
     * const count = await prisma.llmApiKeyModel.count({
     *   where: {
     *     // ... the filter for the LlmApiKeyModels we want to count
     *   }
     * })
    **/
    count<T extends LlmApiKeyModelCountArgs>(
      args?: Subset<T, LlmApiKeyModelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LlmApiKeyModelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LlmApiKeyModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiKeyModelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LlmApiKeyModelAggregateArgs>(args: Subset<T, LlmApiKeyModelAggregateArgs>): Prisma.PrismaPromise<GetLlmApiKeyModelAggregateType<T>>

    /**
     * Group by LlmApiKeyModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmApiKeyModelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LlmApiKeyModelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LlmApiKeyModelGroupByArgs['orderBy'] }
        : { orderBy?: LlmApiKeyModelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LlmApiKeyModelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLlmApiKeyModelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LlmApiKeyModel model
   */
  readonly fields: LlmApiKeyModelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LlmApiKeyModel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LlmApiKeyModelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userModel<T extends LlmApiKeyModel$userModelArgs<ExtArgs> = {}>(args?: Subset<T, LlmApiKeyModel$userModelArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LlmApiKeyModel model
   */ 
  interface LlmApiKeyModelFieldRefs {
    readonly id: FieldRef<"LlmApiKeyModel", 'Int'>
    readonly createdAt: FieldRef<"LlmApiKeyModel", 'DateTime'>
    readonly updatedAt: FieldRef<"LlmApiKeyModel", 'DateTime'>
    readonly userModelId: FieldRef<"LlmApiKeyModel", 'Int'>
    readonly platform: FieldRef<"LlmApiKeyModel", 'LLMPlatform'>
    readonly key: FieldRef<"LlmApiKeyModel", 'String'>
  }
    

  // Custom InputTypes
  /**
   * LlmApiKeyModel findUnique
   */
  export type LlmApiKeyModelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiKeyModel to fetch.
     */
    where: LlmApiKeyModelWhereUniqueInput
  }

  /**
   * LlmApiKeyModel findUniqueOrThrow
   */
  export type LlmApiKeyModelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiKeyModel to fetch.
     */
    where: LlmApiKeyModelWhereUniqueInput
  }

  /**
   * LlmApiKeyModel findFirst
   */
  export type LlmApiKeyModelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiKeyModel to fetch.
     */
    where?: LlmApiKeyModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmApiKeyModels to fetch.
     */
    orderBy?: LlmApiKeyModelOrderByWithRelationInput | LlmApiKeyModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LlmApiKeyModels.
     */
    cursor?: LlmApiKeyModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmApiKeyModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmApiKeyModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LlmApiKeyModels.
     */
    distinct?: LlmApiKeyModelScalarFieldEnum | LlmApiKeyModelScalarFieldEnum[]
  }

  /**
   * LlmApiKeyModel findFirstOrThrow
   */
  export type LlmApiKeyModelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiKeyModel to fetch.
     */
    where?: LlmApiKeyModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmApiKeyModels to fetch.
     */
    orderBy?: LlmApiKeyModelOrderByWithRelationInput | LlmApiKeyModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LlmApiKeyModels.
     */
    cursor?: LlmApiKeyModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmApiKeyModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmApiKeyModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LlmApiKeyModels.
     */
    distinct?: LlmApiKeyModelScalarFieldEnum | LlmApiKeyModelScalarFieldEnum[]
  }

  /**
   * LlmApiKeyModel findMany
   */
  export type LlmApiKeyModelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which LlmApiKeyModels to fetch.
     */
    where?: LlmApiKeyModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmApiKeyModels to fetch.
     */
    orderBy?: LlmApiKeyModelOrderByWithRelationInput | LlmApiKeyModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LlmApiKeyModels.
     */
    cursor?: LlmApiKeyModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmApiKeyModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmApiKeyModels.
     */
    skip?: number
    distinct?: LlmApiKeyModelScalarFieldEnum | LlmApiKeyModelScalarFieldEnum[]
  }

  /**
   * LlmApiKeyModel create
   */
  export type LlmApiKeyModelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * The data needed to create a LlmApiKeyModel.
     */
    data: XOR<LlmApiKeyModelCreateInput, LlmApiKeyModelUncheckedCreateInput>
  }

  /**
   * LlmApiKeyModel createMany
   */
  export type LlmApiKeyModelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LlmApiKeyModels.
     */
    data: LlmApiKeyModelCreateManyInput | LlmApiKeyModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LlmApiKeyModel createManyAndReturn
   */
  export type LlmApiKeyModelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many LlmApiKeyModels.
     */
    data: LlmApiKeyModelCreateManyInput | LlmApiKeyModelCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LlmApiKeyModel update
   */
  export type LlmApiKeyModelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * The data needed to update a LlmApiKeyModel.
     */
    data: XOR<LlmApiKeyModelUpdateInput, LlmApiKeyModelUncheckedUpdateInput>
    /**
     * Choose, which LlmApiKeyModel to update.
     */
    where: LlmApiKeyModelWhereUniqueInput
  }

  /**
   * LlmApiKeyModel updateMany
   */
  export type LlmApiKeyModelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LlmApiKeyModels.
     */
    data: XOR<LlmApiKeyModelUpdateManyMutationInput, LlmApiKeyModelUncheckedUpdateManyInput>
    /**
     * Filter which LlmApiKeyModels to update
     */
    where?: LlmApiKeyModelWhereInput
  }

  /**
   * LlmApiKeyModel upsert
   */
  export type LlmApiKeyModelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * The filter to search for the LlmApiKeyModel to update in case it exists.
     */
    where: LlmApiKeyModelWhereUniqueInput
    /**
     * In case the LlmApiKeyModel found by the `where` argument doesn't exist, create a new LlmApiKeyModel with this data.
     */
    create: XOR<LlmApiKeyModelCreateInput, LlmApiKeyModelUncheckedCreateInput>
    /**
     * In case the LlmApiKeyModel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LlmApiKeyModelUpdateInput, LlmApiKeyModelUncheckedUpdateInput>
  }

  /**
   * LlmApiKeyModel delete
   */
  export type LlmApiKeyModelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter which LlmApiKeyModel to delete.
     */
    where: LlmApiKeyModelWhereUniqueInput
  }

  /**
   * LlmApiKeyModel deleteMany
   */
  export type LlmApiKeyModelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LlmApiKeyModels to delete
     */
    where?: LlmApiKeyModelWhereInput
  }

  /**
   * LlmApiKeyModel.userModel
   */
  export type LlmApiKeyModel$userModelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    where?: UserModelWhereInput
  }

  /**
   * LlmApiKeyModel without action
   */
  export type LlmApiKeyModelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
  }


  /**
   * Model LocationModel
   */

  export type AggregateLocationModel = {
    _count: LocationModelCountAggregateOutputType | null
    _avg: LocationModelAvgAggregateOutputType | null
    _sum: LocationModelSumAggregateOutputType | null
    _min: LocationModelMinAggregateOutputType | null
    _max: LocationModelMaxAggregateOutputType | null
  }

  export type LocationModelAvgAggregateOutputType = {
    id: number | null
  }

  export type LocationModelSumAggregateOutputType = {
    id: number | null
  }

  export type LocationModelMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    core: string | null
  }

  export type LocationModelMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    core: string | null
  }

  export type LocationModelCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    name: number
    core: number
    meta: number
    _all: number
  }


  export type LocationModelAvgAggregateInputType = {
    id?: true
  }

  export type LocationModelSumAggregateInputType = {
    id?: true
  }

  export type LocationModelMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    core?: true
  }

  export type LocationModelMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    core?: true
  }

  export type LocationModelCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    core?: true
    meta?: true
    _all?: true
  }

  export type LocationModelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LocationModel to aggregate.
     */
    where?: LocationModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocationModels to fetch.
     */
    orderBy?: LocationModelOrderByWithRelationInput | LocationModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LocationModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocationModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocationModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LocationModels
    **/
    _count?: true | LocationModelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocationModelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocationModelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocationModelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocationModelMaxAggregateInputType
  }

  export type GetLocationModelAggregateType<T extends LocationModelAggregateArgs> = {
        [P in keyof T & keyof AggregateLocationModel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocationModel[P]>
      : GetScalarType<T[P], AggregateLocationModel[P]>
  }




  export type LocationModelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocationModelWhereInput
    orderBy?: LocationModelOrderByWithAggregationInput | LocationModelOrderByWithAggregationInput[]
    by: LocationModelScalarFieldEnum[] | LocationModelScalarFieldEnum
    having?: LocationModelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocationModelCountAggregateInputType | true
    _avg?: LocationModelAvgAggregateInputType
    _sum?: LocationModelSumAggregateInputType
    _min?: LocationModelMinAggregateInputType
    _max?: LocationModelMaxAggregateInputType
  }

  export type LocationModelGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    name: string
    core: string
    meta: JsonValue
    _count: LocationModelCountAggregateOutputType | null
    _avg: LocationModelAvgAggregateOutputType | null
    _sum: LocationModelSumAggregateOutputType | null
    _min: LocationModelMinAggregateOutputType | null
    _max: LocationModelMaxAggregateOutputType | null
  }

  type GetLocationModelGroupByPayload<T extends LocationModelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocationModelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocationModelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocationModelGroupByOutputType[P]>
            : GetScalarType<T[P], LocationModelGroupByOutputType[P]>
        }
      >
    >


  export type LocationModelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    core?: boolean
    meta?: boolean
  }, ExtArgs["result"]["locationModel"]>

  export type LocationModelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    core?: boolean
    meta?: boolean
  }, ExtArgs["result"]["locationModel"]>

  export type LocationModelSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    core?: boolean
    meta?: boolean
  }


  export type $LocationModelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LocationModel"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      name: string
      core: string
      meta: Prisma.JsonValue
    }, ExtArgs["result"]["locationModel"]>
    composites: {}
  }

  type LocationModelGetPayload<S extends boolean | null | undefined | LocationModelDefaultArgs> = $Result.GetResult<Prisma.$LocationModelPayload, S>

  type LocationModelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LocationModelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LocationModelCountAggregateInputType | true
    }

  export interface LocationModelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LocationModel'], meta: { name: 'LocationModel' } }
    /**
     * Find zero or one LocationModel that matches the filter.
     * @param {LocationModelFindUniqueArgs} args - Arguments to find a LocationModel
     * @example
     * // Get one LocationModel
     * const locationModel = await prisma.locationModel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LocationModelFindUniqueArgs>(args: SelectSubset<T, LocationModelFindUniqueArgs<ExtArgs>>): Prisma__LocationModelClient<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one LocationModel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LocationModelFindUniqueOrThrowArgs} args - Arguments to find a LocationModel
     * @example
     * // Get one LocationModel
     * const locationModel = await prisma.locationModel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LocationModelFindUniqueOrThrowArgs>(args: SelectSubset<T, LocationModelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LocationModelClient<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first LocationModel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationModelFindFirstArgs} args - Arguments to find a LocationModel
     * @example
     * // Get one LocationModel
     * const locationModel = await prisma.locationModel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LocationModelFindFirstArgs>(args?: SelectSubset<T, LocationModelFindFirstArgs<ExtArgs>>): Prisma__LocationModelClient<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first LocationModel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationModelFindFirstOrThrowArgs} args - Arguments to find a LocationModel
     * @example
     * // Get one LocationModel
     * const locationModel = await prisma.locationModel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LocationModelFindFirstOrThrowArgs>(args?: SelectSubset<T, LocationModelFindFirstOrThrowArgs<ExtArgs>>): Prisma__LocationModelClient<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more LocationModels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationModelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LocationModels
     * const locationModels = await prisma.locationModel.findMany()
     * 
     * // Get first 10 LocationModels
     * const locationModels = await prisma.locationModel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const locationModelWithIdOnly = await prisma.locationModel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LocationModelFindManyArgs>(args?: SelectSubset<T, LocationModelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a LocationModel.
     * @param {LocationModelCreateArgs} args - Arguments to create a LocationModel.
     * @example
     * // Create one LocationModel
     * const LocationModel = await prisma.locationModel.create({
     *   data: {
     *     // ... data to create a LocationModel
     *   }
     * })
     * 
     */
    create<T extends LocationModelCreateArgs>(args: SelectSubset<T, LocationModelCreateArgs<ExtArgs>>): Prisma__LocationModelClient<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many LocationModels.
     * @param {LocationModelCreateManyArgs} args - Arguments to create many LocationModels.
     * @example
     * // Create many LocationModels
     * const locationModel = await prisma.locationModel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LocationModelCreateManyArgs>(args?: SelectSubset<T, LocationModelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LocationModels and returns the data saved in the database.
     * @param {LocationModelCreateManyAndReturnArgs} args - Arguments to create many LocationModels.
     * @example
     * // Create many LocationModels
     * const locationModel = await prisma.locationModel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LocationModels and only return the `id`
     * const locationModelWithIdOnly = await prisma.locationModel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LocationModelCreateManyAndReturnArgs>(args?: SelectSubset<T, LocationModelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a LocationModel.
     * @param {LocationModelDeleteArgs} args - Arguments to delete one LocationModel.
     * @example
     * // Delete one LocationModel
     * const LocationModel = await prisma.locationModel.delete({
     *   where: {
     *     // ... filter to delete one LocationModel
     *   }
     * })
     * 
     */
    delete<T extends LocationModelDeleteArgs>(args: SelectSubset<T, LocationModelDeleteArgs<ExtArgs>>): Prisma__LocationModelClient<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one LocationModel.
     * @param {LocationModelUpdateArgs} args - Arguments to update one LocationModel.
     * @example
     * // Update one LocationModel
     * const locationModel = await prisma.locationModel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LocationModelUpdateArgs>(args: SelectSubset<T, LocationModelUpdateArgs<ExtArgs>>): Prisma__LocationModelClient<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more LocationModels.
     * @param {LocationModelDeleteManyArgs} args - Arguments to filter LocationModels to delete.
     * @example
     * // Delete a few LocationModels
     * const { count } = await prisma.locationModel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LocationModelDeleteManyArgs>(args?: SelectSubset<T, LocationModelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LocationModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationModelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LocationModels
     * const locationModel = await prisma.locationModel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LocationModelUpdateManyArgs>(args: SelectSubset<T, LocationModelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LocationModel.
     * @param {LocationModelUpsertArgs} args - Arguments to update or create a LocationModel.
     * @example
     * // Update or create a LocationModel
     * const locationModel = await prisma.locationModel.upsert({
     *   create: {
     *     // ... data to create a LocationModel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LocationModel we want to update
     *   }
     * })
     */
    upsert<T extends LocationModelUpsertArgs>(args: SelectSubset<T, LocationModelUpsertArgs<ExtArgs>>): Prisma__LocationModelClient<$Result.GetResult<Prisma.$LocationModelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of LocationModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationModelCountArgs} args - Arguments to filter LocationModels to count.
     * @example
     * // Count the number of LocationModels
     * const count = await prisma.locationModel.count({
     *   where: {
     *     // ... the filter for the LocationModels we want to count
     *   }
     * })
    **/
    count<T extends LocationModelCountArgs>(
      args?: Subset<T, LocationModelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocationModelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LocationModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationModelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocationModelAggregateArgs>(args: Subset<T, LocationModelAggregateArgs>): Prisma.PrismaPromise<GetLocationModelAggregateType<T>>

    /**
     * Group by LocationModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationModelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocationModelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocationModelGroupByArgs['orderBy'] }
        : { orderBy?: LocationModelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocationModelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocationModelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LocationModel model
   */
  readonly fields: LocationModelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LocationModel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LocationModelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LocationModel model
   */ 
  interface LocationModelFieldRefs {
    readonly id: FieldRef<"LocationModel", 'Int'>
    readonly createdAt: FieldRef<"LocationModel", 'DateTime'>
    readonly updatedAt: FieldRef<"LocationModel", 'DateTime'>
    readonly name: FieldRef<"LocationModel", 'String'>
    readonly core: FieldRef<"LocationModel", 'String'>
    readonly meta: FieldRef<"LocationModel", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * LocationModel findUnique
   */
  export type LocationModelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * Filter, which LocationModel to fetch.
     */
    where: LocationModelWhereUniqueInput
  }

  /**
   * LocationModel findUniqueOrThrow
   */
  export type LocationModelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * Filter, which LocationModel to fetch.
     */
    where: LocationModelWhereUniqueInput
  }

  /**
   * LocationModel findFirst
   */
  export type LocationModelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * Filter, which LocationModel to fetch.
     */
    where?: LocationModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocationModels to fetch.
     */
    orderBy?: LocationModelOrderByWithRelationInput | LocationModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LocationModels.
     */
    cursor?: LocationModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocationModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocationModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LocationModels.
     */
    distinct?: LocationModelScalarFieldEnum | LocationModelScalarFieldEnum[]
  }

  /**
   * LocationModel findFirstOrThrow
   */
  export type LocationModelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * Filter, which LocationModel to fetch.
     */
    where?: LocationModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocationModels to fetch.
     */
    orderBy?: LocationModelOrderByWithRelationInput | LocationModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LocationModels.
     */
    cursor?: LocationModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocationModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocationModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LocationModels.
     */
    distinct?: LocationModelScalarFieldEnum | LocationModelScalarFieldEnum[]
  }

  /**
   * LocationModel findMany
   */
  export type LocationModelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * Filter, which LocationModels to fetch.
     */
    where?: LocationModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocationModels to fetch.
     */
    orderBy?: LocationModelOrderByWithRelationInput | LocationModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LocationModels.
     */
    cursor?: LocationModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocationModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocationModels.
     */
    skip?: number
    distinct?: LocationModelScalarFieldEnum | LocationModelScalarFieldEnum[]
  }

  /**
   * LocationModel create
   */
  export type LocationModelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * The data needed to create a LocationModel.
     */
    data: XOR<LocationModelCreateInput, LocationModelUncheckedCreateInput>
  }

  /**
   * LocationModel createMany
   */
  export type LocationModelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LocationModels.
     */
    data: LocationModelCreateManyInput | LocationModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LocationModel createManyAndReturn
   */
  export type LocationModelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many LocationModels.
     */
    data: LocationModelCreateManyInput | LocationModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LocationModel update
   */
  export type LocationModelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * The data needed to update a LocationModel.
     */
    data: XOR<LocationModelUpdateInput, LocationModelUncheckedUpdateInput>
    /**
     * Choose, which LocationModel to update.
     */
    where: LocationModelWhereUniqueInput
  }

  /**
   * LocationModel updateMany
   */
  export type LocationModelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LocationModels.
     */
    data: XOR<LocationModelUpdateManyMutationInput, LocationModelUncheckedUpdateManyInput>
    /**
     * Filter which LocationModels to update
     */
    where?: LocationModelWhereInput
  }

  /**
   * LocationModel upsert
   */
  export type LocationModelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * The filter to search for the LocationModel to update in case it exists.
     */
    where: LocationModelWhereUniqueInput
    /**
     * In case the LocationModel found by the `where` argument doesn't exist, create a new LocationModel with this data.
     */
    create: XOR<LocationModelCreateInput, LocationModelUncheckedCreateInput>
    /**
     * In case the LocationModel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LocationModelUpdateInput, LocationModelUncheckedUpdateInput>
  }

  /**
   * LocationModel delete
   */
  export type LocationModelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
    /**
     * Filter which LocationModel to delete.
     */
    where: LocationModelWhereUniqueInput
  }

  /**
   * LocationModel deleteMany
   */
  export type LocationModelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LocationModels to delete
     */
    where?: LocationModelWhereInput
  }

  /**
   * LocationModel without action
   */
  export type LocationModelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationModel
     */
    select?: LocationModelSelect<ExtArgs> | null
  }


  /**
   * Model UserApiKeyModel
   */

  export type AggregateUserApiKeyModel = {
    _count: UserApiKeyModelCountAggregateOutputType | null
    _avg: UserApiKeyModelAvgAggregateOutputType | null
    _sum: UserApiKeyModelSumAggregateOutputType | null
    _min: UserApiKeyModelMinAggregateOutputType | null
    _max: UserApiKeyModelMaxAggregateOutputType | null
  }

  export type UserApiKeyModelAvgAggregateOutputType = {
    id: number | null
    userModelId: number | null
  }

  export type UserApiKeyModelSumAggregateOutputType = {
    id: number | null
    userModelId: number | null
  }

  export type UserApiKeyModelMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    userModelId: number | null
    key: string | null
  }

  export type UserApiKeyModelMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    userModelId: number | null
    key: string | null
  }

  export type UserApiKeyModelCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    userModelId: number
    key: number
    _all: number
  }


  export type UserApiKeyModelAvgAggregateInputType = {
    id?: true
    userModelId?: true
  }

  export type UserApiKeyModelSumAggregateInputType = {
    id?: true
    userModelId?: true
  }

  export type UserApiKeyModelMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
    key?: true
  }

  export type UserApiKeyModelMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
    key?: true
  }

  export type UserApiKeyModelCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
    key?: true
    _all?: true
  }

  export type UserApiKeyModelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserApiKeyModel to aggregate.
     */
    where?: UserApiKeyModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserApiKeyModels to fetch.
     */
    orderBy?: UserApiKeyModelOrderByWithRelationInput | UserApiKeyModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserApiKeyModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserApiKeyModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserApiKeyModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserApiKeyModels
    **/
    _count?: true | UserApiKeyModelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserApiKeyModelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserApiKeyModelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserApiKeyModelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserApiKeyModelMaxAggregateInputType
  }

  export type GetUserApiKeyModelAggregateType<T extends UserApiKeyModelAggregateArgs> = {
        [P in keyof T & keyof AggregateUserApiKeyModel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserApiKeyModel[P]>
      : GetScalarType<T[P], AggregateUserApiKeyModel[P]>
  }




  export type UserApiKeyModelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserApiKeyModelWhereInput
    orderBy?: UserApiKeyModelOrderByWithAggregationInput | UserApiKeyModelOrderByWithAggregationInput[]
    by: UserApiKeyModelScalarFieldEnum[] | UserApiKeyModelScalarFieldEnum
    having?: UserApiKeyModelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserApiKeyModelCountAggregateInputType | true
    _avg?: UserApiKeyModelAvgAggregateInputType
    _sum?: UserApiKeyModelSumAggregateInputType
    _min?: UserApiKeyModelMinAggregateInputType
    _max?: UserApiKeyModelMaxAggregateInputType
  }

  export type UserApiKeyModelGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    userModelId: number | null
    key: string
    _count: UserApiKeyModelCountAggregateOutputType | null
    _avg: UserApiKeyModelAvgAggregateOutputType | null
    _sum: UserApiKeyModelSumAggregateOutputType | null
    _min: UserApiKeyModelMinAggregateOutputType | null
    _max: UserApiKeyModelMaxAggregateOutputType | null
  }

  type GetUserApiKeyModelGroupByPayload<T extends UserApiKeyModelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserApiKeyModelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserApiKeyModelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserApiKeyModelGroupByOutputType[P]>
            : GetScalarType<T[P], UserApiKeyModelGroupByOutputType[P]>
        }
      >
    >


  export type UserApiKeyModelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    key?: boolean
    userModel?: boolean | UserApiKeyModel$userModelArgs<ExtArgs>
  }, ExtArgs["result"]["userApiKeyModel"]>

  export type UserApiKeyModelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    key?: boolean
    userModel?: boolean | UserApiKeyModel$userModelArgs<ExtArgs>
  }, ExtArgs["result"]["userApiKeyModel"]>

  export type UserApiKeyModelSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    key?: boolean
  }

  export type UserApiKeyModelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userModel?: boolean | UserApiKeyModel$userModelArgs<ExtArgs>
  }
  export type UserApiKeyModelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userModel?: boolean | UserApiKeyModel$userModelArgs<ExtArgs>
  }

  export type $UserApiKeyModelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserApiKeyModel"
    objects: {
      userModel: Prisma.$UserModelPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      userModelId: number | null
      key: string
    }, ExtArgs["result"]["userApiKeyModel"]>
    composites: {}
  }

  type UserApiKeyModelGetPayload<S extends boolean | null | undefined | UserApiKeyModelDefaultArgs> = $Result.GetResult<Prisma.$UserApiKeyModelPayload, S>

  type UserApiKeyModelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserApiKeyModelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserApiKeyModelCountAggregateInputType | true
    }

  export interface UserApiKeyModelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserApiKeyModel'], meta: { name: 'UserApiKeyModel' } }
    /**
     * Find zero or one UserApiKeyModel that matches the filter.
     * @param {UserApiKeyModelFindUniqueArgs} args - Arguments to find a UserApiKeyModel
     * @example
     * // Get one UserApiKeyModel
     * const userApiKeyModel = await prisma.userApiKeyModel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserApiKeyModelFindUniqueArgs>(args: SelectSubset<T, UserApiKeyModelFindUniqueArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserApiKeyModel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserApiKeyModelFindUniqueOrThrowArgs} args - Arguments to find a UserApiKeyModel
     * @example
     * // Get one UserApiKeyModel
     * const userApiKeyModel = await prisma.userApiKeyModel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserApiKeyModelFindUniqueOrThrowArgs>(args: SelectSubset<T, UserApiKeyModelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserApiKeyModel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiKeyModelFindFirstArgs} args - Arguments to find a UserApiKeyModel
     * @example
     * // Get one UserApiKeyModel
     * const userApiKeyModel = await prisma.userApiKeyModel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserApiKeyModelFindFirstArgs>(args?: SelectSubset<T, UserApiKeyModelFindFirstArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserApiKeyModel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiKeyModelFindFirstOrThrowArgs} args - Arguments to find a UserApiKeyModel
     * @example
     * // Get one UserApiKeyModel
     * const userApiKeyModel = await prisma.userApiKeyModel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserApiKeyModelFindFirstOrThrowArgs>(args?: SelectSubset<T, UserApiKeyModelFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserApiKeyModels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiKeyModelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserApiKeyModels
     * const userApiKeyModels = await prisma.userApiKeyModel.findMany()
     * 
     * // Get first 10 UserApiKeyModels
     * const userApiKeyModels = await prisma.userApiKeyModel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userApiKeyModelWithIdOnly = await prisma.userApiKeyModel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserApiKeyModelFindManyArgs>(args?: SelectSubset<T, UserApiKeyModelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserApiKeyModel.
     * @param {UserApiKeyModelCreateArgs} args - Arguments to create a UserApiKeyModel.
     * @example
     * // Create one UserApiKeyModel
     * const UserApiKeyModel = await prisma.userApiKeyModel.create({
     *   data: {
     *     // ... data to create a UserApiKeyModel
     *   }
     * })
     * 
     */
    create<T extends UserApiKeyModelCreateArgs>(args: SelectSubset<T, UserApiKeyModelCreateArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserApiKeyModels.
     * @param {UserApiKeyModelCreateManyArgs} args - Arguments to create many UserApiKeyModels.
     * @example
     * // Create many UserApiKeyModels
     * const userApiKeyModel = await prisma.userApiKeyModel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserApiKeyModelCreateManyArgs>(args?: SelectSubset<T, UserApiKeyModelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserApiKeyModels and returns the data saved in the database.
     * @param {UserApiKeyModelCreateManyAndReturnArgs} args - Arguments to create many UserApiKeyModels.
     * @example
     * // Create many UserApiKeyModels
     * const userApiKeyModel = await prisma.userApiKeyModel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserApiKeyModels and only return the `id`
     * const userApiKeyModelWithIdOnly = await prisma.userApiKeyModel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserApiKeyModelCreateManyAndReturnArgs>(args?: SelectSubset<T, UserApiKeyModelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserApiKeyModel.
     * @param {UserApiKeyModelDeleteArgs} args - Arguments to delete one UserApiKeyModel.
     * @example
     * // Delete one UserApiKeyModel
     * const UserApiKeyModel = await prisma.userApiKeyModel.delete({
     *   where: {
     *     // ... filter to delete one UserApiKeyModel
     *   }
     * })
     * 
     */
    delete<T extends UserApiKeyModelDeleteArgs>(args: SelectSubset<T, UserApiKeyModelDeleteArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserApiKeyModel.
     * @param {UserApiKeyModelUpdateArgs} args - Arguments to update one UserApiKeyModel.
     * @example
     * // Update one UserApiKeyModel
     * const userApiKeyModel = await prisma.userApiKeyModel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserApiKeyModelUpdateArgs>(args: SelectSubset<T, UserApiKeyModelUpdateArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserApiKeyModels.
     * @param {UserApiKeyModelDeleteManyArgs} args - Arguments to filter UserApiKeyModels to delete.
     * @example
     * // Delete a few UserApiKeyModels
     * const { count } = await prisma.userApiKeyModel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserApiKeyModelDeleteManyArgs>(args?: SelectSubset<T, UserApiKeyModelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserApiKeyModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiKeyModelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserApiKeyModels
     * const userApiKeyModel = await prisma.userApiKeyModel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserApiKeyModelUpdateManyArgs>(args: SelectSubset<T, UserApiKeyModelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserApiKeyModel.
     * @param {UserApiKeyModelUpsertArgs} args - Arguments to update or create a UserApiKeyModel.
     * @example
     * // Update or create a UserApiKeyModel
     * const userApiKeyModel = await prisma.userApiKeyModel.upsert({
     *   create: {
     *     // ... data to create a UserApiKeyModel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserApiKeyModel we want to update
     *   }
     * })
     */
    upsert<T extends UserApiKeyModelUpsertArgs>(args: SelectSubset<T, UserApiKeyModelUpsertArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserApiKeyModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiKeyModelCountArgs} args - Arguments to filter UserApiKeyModels to count.
     * @example
     * // Count the number of UserApiKeyModels
     * const count = await prisma.userApiKeyModel.count({
     *   where: {
     *     // ... the filter for the UserApiKeyModels we want to count
     *   }
     * })
    **/
    count<T extends UserApiKeyModelCountArgs>(
      args?: Subset<T, UserApiKeyModelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserApiKeyModelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserApiKeyModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiKeyModelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserApiKeyModelAggregateArgs>(args: Subset<T, UserApiKeyModelAggregateArgs>): Prisma.PrismaPromise<GetUserApiKeyModelAggregateType<T>>

    /**
     * Group by UserApiKeyModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiKeyModelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserApiKeyModelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserApiKeyModelGroupByArgs['orderBy'] }
        : { orderBy?: UserApiKeyModelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserApiKeyModelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserApiKeyModelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserApiKeyModel model
   */
  readonly fields: UserApiKeyModelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserApiKeyModel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserApiKeyModelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userModel<T extends UserApiKeyModel$userModelArgs<ExtArgs> = {}>(args?: Subset<T, UserApiKeyModel$userModelArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserApiKeyModel model
   */ 
  interface UserApiKeyModelFieldRefs {
    readonly id: FieldRef<"UserApiKeyModel", 'Int'>
    readonly createdAt: FieldRef<"UserApiKeyModel", 'DateTime'>
    readonly updatedAt: FieldRef<"UserApiKeyModel", 'DateTime'>
    readonly userModelId: FieldRef<"UserApiKeyModel", 'Int'>
    readonly key: FieldRef<"UserApiKeyModel", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserApiKeyModel findUnique
   */
  export type UserApiKeyModelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiKeyModel to fetch.
     */
    where: UserApiKeyModelWhereUniqueInput
  }

  /**
   * UserApiKeyModel findUniqueOrThrow
   */
  export type UserApiKeyModelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiKeyModel to fetch.
     */
    where: UserApiKeyModelWhereUniqueInput
  }

  /**
   * UserApiKeyModel findFirst
   */
  export type UserApiKeyModelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiKeyModel to fetch.
     */
    where?: UserApiKeyModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserApiKeyModels to fetch.
     */
    orderBy?: UserApiKeyModelOrderByWithRelationInput | UserApiKeyModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserApiKeyModels.
     */
    cursor?: UserApiKeyModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserApiKeyModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserApiKeyModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserApiKeyModels.
     */
    distinct?: UserApiKeyModelScalarFieldEnum | UserApiKeyModelScalarFieldEnum[]
  }

  /**
   * UserApiKeyModel findFirstOrThrow
   */
  export type UserApiKeyModelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiKeyModel to fetch.
     */
    where?: UserApiKeyModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserApiKeyModels to fetch.
     */
    orderBy?: UserApiKeyModelOrderByWithRelationInput | UserApiKeyModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserApiKeyModels.
     */
    cursor?: UserApiKeyModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserApiKeyModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserApiKeyModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserApiKeyModels.
     */
    distinct?: UserApiKeyModelScalarFieldEnum | UserApiKeyModelScalarFieldEnum[]
  }

  /**
   * UserApiKeyModel findMany
   */
  export type UserApiKeyModelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiKeyModels to fetch.
     */
    where?: UserApiKeyModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserApiKeyModels to fetch.
     */
    orderBy?: UserApiKeyModelOrderByWithRelationInput | UserApiKeyModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserApiKeyModels.
     */
    cursor?: UserApiKeyModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserApiKeyModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserApiKeyModels.
     */
    skip?: number
    distinct?: UserApiKeyModelScalarFieldEnum | UserApiKeyModelScalarFieldEnum[]
  }

  /**
   * UserApiKeyModel create
   */
  export type UserApiKeyModelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * The data needed to create a UserApiKeyModel.
     */
    data: XOR<UserApiKeyModelCreateInput, UserApiKeyModelUncheckedCreateInput>
  }

  /**
   * UserApiKeyModel createMany
   */
  export type UserApiKeyModelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserApiKeyModels.
     */
    data: UserApiKeyModelCreateManyInput | UserApiKeyModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserApiKeyModel createManyAndReturn
   */
  export type UserApiKeyModelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserApiKeyModels.
     */
    data: UserApiKeyModelCreateManyInput | UserApiKeyModelCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserApiKeyModel update
   */
  export type UserApiKeyModelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * The data needed to update a UserApiKeyModel.
     */
    data: XOR<UserApiKeyModelUpdateInput, UserApiKeyModelUncheckedUpdateInput>
    /**
     * Choose, which UserApiKeyModel to update.
     */
    where: UserApiKeyModelWhereUniqueInput
  }

  /**
   * UserApiKeyModel updateMany
   */
  export type UserApiKeyModelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserApiKeyModels.
     */
    data: XOR<UserApiKeyModelUpdateManyMutationInput, UserApiKeyModelUncheckedUpdateManyInput>
    /**
     * Filter which UserApiKeyModels to update
     */
    where?: UserApiKeyModelWhereInput
  }

  /**
   * UserApiKeyModel upsert
   */
  export type UserApiKeyModelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * The filter to search for the UserApiKeyModel to update in case it exists.
     */
    where: UserApiKeyModelWhereUniqueInput
    /**
     * In case the UserApiKeyModel found by the `where` argument doesn't exist, create a new UserApiKeyModel with this data.
     */
    create: XOR<UserApiKeyModelCreateInput, UserApiKeyModelUncheckedCreateInput>
    /**
     * In case the UserApiKeyModel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserApiKeyModelUpdateInput, UserApiKeyModelUncheckedUpdateInput>
  }

  /**
   * UserApiKeyModel delete
   */
  export type UserApiKeyModelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    /**
     * Filter which UserApiKeyModel to delete.
     */
    where: UserApiKeyModelWhereUniqueInput
  }

  /**
   * UserApiKeyModel deleteMany
   */
  export type UserApiKeyModelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserApiKeyModels to delete
     */
    where?: UserApiKeyModelWhereInput
  }

  /**
   * UserApiKeyModel.userModel
   */
  export type UserApiKeyModel$userModelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    where?: UserModelWhereInput
  }

  /**
   * UserApiKeyModel without action
   */
  export type UserApiKeyModelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
  }


  /**
   * Model UserApiHistoryModel
   */

  export type AggregateUserApiHistoryModel = {
    _count: UserApiHistoryModelCountAggregateOutputType | null
    _avg: UserApiHistoryModelAvgAggregateOutputType | null
    _sum: UserApiHistoryModelSumAggregateOutputType | null
    _min: UserApiHistoryModelMinAggregateOutputType | null
    _max: UserApiHistoryModelMaxAggregateOutputType | null
  }

  export type UserApiHistoryModelAvgAggregateOutputType = {
    id: number | null
    userModelId: number | null
  }

  export type UserApiHistoryModelSumAggregateOutputType = {
    id: number | null
    userModelId: number | null
  }

  export type UserApiHistoryModelMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    userModelId: number | null
  }

  export type UserApiHistoryModelMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    userModelId: number | null
  }

  export type UserApiHistoryModelCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    userModelId: number
    request: number
    response: number
    _all: number
  }


  export type UserApiHistoryModelAvgAggregateInputType = {
    id?: true
    userModelId?: true
  }

  export type UserApiHistoryModelSumAggregateInputType = {
    id?: true
    userModelId?: true
  }

  export type UserApiHistoryModelMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
  }

  export type UserApiHistoryModelMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
  }

  export type UserApiHistoryModelCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    userModelId?: true
    request?: true
    response?: true
    _all?: true
  }

  export type UserApiHistoryModelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserApiHistoryModel to aggregate.
     */
    where?: UserApiHistoryModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserApiHistoryModels to fetch.
     */
    orderBy?: UserApiHistoryModelOrderByWithRelationInput | UserApiHistoryModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserApiHistoryModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserApiHistoryModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserApiHistoryModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserApiHistoryModels
    **/
    _count?: true | UserApiHistoryModelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserApiHistoryModelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserApiHistoryModelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserApiHistoryModelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserApiHistoryModelMaxAggregateInputType
  }

  export type GetUserApiHistoryModelAggregateType<T extends UserApiHistoryModelAggregateArgs> = {
        [P in keyof T & keyof AggregateUserApiHistoryModel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserApiHistoryModel[P]>
      : GetScalarType<T[P], AggregateUserApiHistoryModel[P]>
  }




  export type UserApiHistoryModelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserApiHistoryModelWhereInput
    orderBy?: UserApiHistoryModelOrderByWithAggregationInput | UserApiHistoryModelOrderByWithAggregationInput[]
    by: UserApiHistoryModelScalarFieldEnum[] | UserApiHistoryModelScalarFieldEnum
    having?: UserApiHistoryModelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserApiHistoryModelCountAggregateInputType | true
    _avg?: UserApiHistoryModelAvgAggregateInputType
    _sum?: UserApiHistoryModelSumAggregateInputType
    _min?: UserApiHistoryModelMinAggregateInputType
    _max?: UserApiHistoryModelMaxAggregateInputType
  }

  export type UserApiHistoryModelGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    userModelId: number | null
    request: JsonValue
    response: JsonValue
    _count: UserApiHistoryModelCountAggregateOutputType | null
    _avg: UserApiHistoryModelAvgAggregateOutputType | null
    _sum: UserApiHistoryModelSumAggregateOutputType | null
    _min: UserApiHistoryModelMinAggregateOutputType | null
    _max: UserApiHistoryModelMaxAggregateOutputType | null
  }

  type GetUserApiHistoryModelGroupByPayload<T extends UserApiHistoryModelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserApiHistoryModelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserApiHistoryModelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserApiHistoryModelGroupByOutputType[P]>
            : GetScalarType<T[P], UserApiHistoryModelGroupByOutputType[P]>
        }
      >
    >


  export type UserApiHistoryModelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    request?: boolean
    response?: boolean
    userModel?: boolean | UserApiHistoryModel$userModelArgs<ExtArgs>
  }, ExtArgs["result"]["userApiHistoryModel"]>

  export type UserApiHistoryModelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    request?: boolean
    response?: boolean
    userModel?: boolean | UserApiHistoryModel$userModelArgs<ExtArgs>
  }, ExtArgs["result"]["userApiHistoryModel"]>

  export type UserApiHistoryModelSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userModelId?: boolean
    request?: boolean
    response?: boolean
  }

  export type UserApiHistoryModelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userModel?: boolean | UserApiHistoryModel$userModelArgs<ExtArgs>
  }
  export type UserApiHistoryModelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userModel?: boolean | UserApiHistoryModel$userModelArgs<ExtArgs>
  }

  export type $UserApiHistoryModelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserApiHistoryModel"
    objects: {
      userModel: Prisma.$UserModelPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      userModelId: number | null
      request: Prisma.JsonValue
      response: Prisma.JsonValue
    }, ExtArgs["result"]["userApiHistoryModel"]>
    composites: {}
  }

  type UserApiHistoryModelGetPayload<S extends boolean | null | undefined | UserApiHistoryModelDefaultArgs> = $Result.GetResult<Prisma.$UserApiHistoryModelPayload, S>

  type UserApiHistoryModelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserApiHistoryModelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserApiHistoryModelCountAggregateInputType | true
    }

  export interface UserApiHistoryModelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserApiHistoryModel'], meta: { name: 'UserApiHistoryModel' } }
    /**
     * Find zero or one UserApiHistoryModel that matches the filter.
     * @param {UserApiHistoryModelFindUniqueArgs} args - Arguments to find a UserApiHistoryModel
     * @example
     * // Get one UserApiHistoryModel
     * const userApiHistoryModel = await prisma.userApiHistoryModel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserApiHistoryModelFindUniqueArgs>(args: SelectSubset<T, UserApiHistoryModelFindUniqueArgs<ExtArgs>>): Prisma__UserApiHistoryModelClient<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserApiHistoryModel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserApiHistoryModelFindUniqueOrThrowArgs} args - Arguments to find a UserApiHistoryModel
     * @example
     * // Get one UserApiHistoryModel
     * const userApiHistoryModel = await prisma.userApiHistoryModel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserApiHistoryModelFindUniqueOrThrowArgs>(args: SelectSubset<T, UserApiHistoryModelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserApiHistoryModelClient<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserApiHistoryModel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiHistoryModelFindFirstArgs} args - Arguments to find a UserApiHistoryModel
     * @example
     * // Get one UserApiHistoryModel
     * const userApiHistoryModel = await prisma.userApiHistoryModel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserApiHistoryModelFindFirstArgs>(args?: SelectSubset<T, UserApiHistoryModelFindFirstArgs<ExtArgs>>): Prisma__UserApiHistoryModelClient<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserApiHistoryModel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiHistoryModelFindFirstOrThrowArgs} args - Arguments to find a UserApiHistoryModel
     * @example
     * // Get one UserApiHistoryModel
     * const userApiHistoryModel = await prisma.userApiHistoryModel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserApiHistoryModelFindFirstOrThrowArgs>(args?: SelectSubset<T, UserApiHistoryModelFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserApiHistoryModelClient<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserApiHistoryModels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiHistoryModelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserApiHistoryModels
     * const userApiHistoryModels = await prisma.userApiHistoryModel.findMany()
     * 
     * // Get first 10 UserApiHistoryModels
     * const userApiHistoryModels = await prisma.userApiHistoryModel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userApiHistoryModelWithIdOnly = await prisma.userApiHistoryModel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserApiHistoryModelFindManyArgs>(args?: SelectSubset<T, UserApiHistoryModelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserApiHistoryModel.
     * @param {UserApiHistoryModelCreateArgs} args - Arguments to create a UserApiHistoryModel.
     * @example
     * // Create one UserApiHistoryModel
     * const UserApiHistoryModel = await prisma.userApiHistoryModel.create({
     *   data: {
     *     // ... data to create a UserApiHistoryModel
     *   }
     * })
     * 
     */
    create<T extends UserApiHistoryModelCreateArgs>(args: SelectSubset<T, UserApiHistoryModelCreateArgs<ExtArgs>>): Prisma__UserApiHistoryModelClient<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserApiHistoryModels.
     * @param {UserApiHistoryModelCreateManyArgs} args - Arguments to create many UserApiHistoryModels.
     * @example
     * // Create many UserApiHistoryModels
     * const userApiHistoryModel = await prisma.userApiHistoryModel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserApiHistoryModelCreateManyArgs>(args?: SelectSubset<T, UserApiHistoryModelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserApiHistoryModels and returns the data saved in the database.
     * @param {UserApiHistoryModelCreateManyAndReturnArgs} args - Arguments to create many UserApiHistoryModels.
     * @example
     * // Create many UserApiHistoryModels
     * const userApiHistoryModel = await prisma.userApiHistoryModel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserApiHistoryModels and only return the `id`
     * const userApiHistoryModelWithIdOnly = await prisma.userApiHistoryModel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserApiHistoryModelCreateManyAndReturnArgs>(args?: SelectSubset<T, UserApiHistoryModelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserApiHistoryModel.
     * @param {UserApiHistoryModelDeleteArgs} args - Arguments to delete one UserApiHistoryModel.
     * @example
     * // Delete one UserApiHistoryModel
     * const UserApiHistoryModel = await prisma.userApiHistoryModel.delete({
     *   where: {
     *     // ... filter to delete one UserApiHistoryModel
     *   }
     * })
     * 
     */
    delete<T extends UserApiHistoryModelDeleteArgs>(args: SelectSubset<T, UserApiHistoryModelDeleteArgs<ExtArgs>>): Prisma__UserApiHistoryModelClient<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserApiHistoryModel.
     * @param {UserApiHistoryModelUpdateArgs} args - Arguments to update one UserApiHistoryModel.
     * @example
     * // Update one UserApiHistoryModel
     * const userApiHistoryModel = await prisma.userApiHistoryModel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserApiHistoryModelUpdateArgs>(args: SelectSubset<T, UserApiHistoryModelUpdateArgs<ExtArgs>>): Prisma__UserApiHistoryModelClient<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserApiHistoryModels.
     * @param {UserApiHistoryModelDeleteManyArgs} args - Arguments to filter UserApiHistoryModels to delete.
     * @example
     * // Delete a few UserApiHistoryModels
     * const { count } = await prisma.userApiHistoryModel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserApiHistoryModelDeleteManyArgs>(args?: SelectSubset<T, UserApiHistoryModelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserApiHistoryModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiHistoryModelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserApiHistoryModels
     * const userApiHistoryModel = await prisma.userApiHistoryModel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserApiHistoryModelUpdateManyArgs>(args: SelectSubset<T, UserApiHistoryModelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserApiHistoryModel.
     * @param {UserApiHistoryModelUpsertArgs} args - Arguments to update or create a UserApiHistoryModel.
     * @example
     * // Update or create a UserApiHistoryModel
     * const userApiHistoryModel = await prisma.userApiHistoryModel.upsert({
     *   create: {
     *     // ... data to create a UserApiHistoryModel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserApiHistoryModel we want to update
     *   }
     * })
     */
    upsert<T extends UserApiHistoryModelUpsertArgs>(args: SelectSubset<T, UserApiHistoryModelUpsertArgs<ExtArgs>>): Prisma__UserApiHistoryModelClient<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserApiHistoryModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiHistoryModelCountArgs} args - Arguments to filter UserApiHistoryModels to count.
     * @example
     * // Count the number of UserApiHistoryModels
     * const count = await prisma.userApiHistoryModel.count({
     *   where: {
     *     // ... the filter for the UserApiHistoryModels we want to count
     *   }
     * })
    **/
    count<T extends UserApiHistoryModelCountArgs>(
      args?: Subset<T, UserApiHistoryModelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserApiHistoryModelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserApiHistoryModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiHistoryModelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserApiHistoryModelAggregateArgs>(args: Subset<T, UserApiHistoryModelAggregateArgs>): Prisma.PrismaPromise<GetUserApiHistoryModelAggregateType<T>>

    /**
     * Group by UserApiHistoryModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserApiHistoryModelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserApiHistoryModelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserApiHistoryModelGroupByArgs['orderBy'] }
        : { orderBy?: UserApiHistoryModelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserApiHistoryModelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserApiHistoryModelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserApiHistoryModel model
   */
  readonly fields: UserApiHistoryModelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserApiHistoryModel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserApiHistoryModelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userModel<T extends UserApiHistoryModel$userModelArgs<ExtArgs> = {}>(args?: Subset<T, UserApiHistoryModel$userModelArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserApiHistoryModel model
   */ 
  interface UserApiHistoryModelFieldRefs {
    readonly id: FieldRef<"UserApiHistoryModel", 'Int'>
    readonly createdAt: FieldRef<"UserApiHistoryModel", 'DateTime'>
    readonly updatedAt: FieldRef<"UserApiHistoryModel", 'DateTime'>
    readonly userModelId: FieldRef<"UserApiHistoryModel", 'Int'>
    readonly request: FieldRef<"UserApiHistoryModel", 'Json'>
    readonly response: FieldRef<"UserApiHistoryModel", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * UserApiHistoryModel findUnique
   */
  export type UserApiHistoryModelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiHistoryModel to fetch.
     */
    where: UserApiHistoryModelWhereUniqueInput
  }

  /**
   * UserApiHistoryModel findUniqueOrThrow
   */
  export type UserApiHistoryModelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiHistoryModel to fetch.
     */
    where: UserApiHistoryModelWhereUniqueInput
  }

  /**
   * UserApiHistoryModel findFirst
   */
  export type UserApiHistoryModelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiHistoryModel to fetch.
     */
    where?: UserApiHistoryModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserApiHistoryModels to fetch.
     */
    orderBy?: UserApiHistoryModelOrderByWithRelationInput | UserApiHistoryModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserApiHistoryModels.
     */
    cursor?: UserApiHistoryModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserApiHistoryModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserApiHistoryModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserApiHistoryModels.
     */
    distinct?: UserApiHistoryModelScalarFieldEnum | UserApiHistoryModelScalarFieldEnum[]
  }

  /**
   * UserApiHistoryModel findFirstOrThrow
   */
  export type UserApiHistoryModelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiHistoryModel to fetch.
     */
    where?: UserApiHistoryModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserApiHistoryModels to fetch.
     */
    orderBy?: UserApiHistoryModelOrderByWithRelationInput | UserApiHistoryModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserApiHistoryModels.
     */
    cursor?: UserApiHistoryModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserApiHistoryModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserApiHistoryModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserApiHistoryModels.
     */
    distinct?: UserApiHistoryModelScalarFieldEnum | UserApiHistoryModelScalarFieldEnum[]
  }

  /**
   * UserApiHistoryModel findMany
   */
  export type UserApiHistoryModelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * Filter, which UserApiHistoryModels to fetch.
     */
    where?: UserApiHistoryModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserApiHistoryModels to fetch.
     */
    orderBy?: UserApiHistoryModelOrderByWithRelationInput | UserApiHistoryModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserApiHistoryModels.
     */
    cursor?: UserApiHistoryModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserApiHistoryModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserApiHistoryModels.
     */
    skip?: number
    distinct?: UserApiHistoryModelScalarFieldEnum | UserApiHistoryModelScalarFieldEnum[]
  }

  /**
   * UserApiHistoryModel create
   */
  export type UserApiHistoryModelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * The data needed to create a UserApiHistoryModel.
     */
    data: XOR<UserApiHistoryModelCreateInput, UserApiHistoryModelUncheckedCreateInput>
  }

  /**
   * UserApiHistoryModel createMany
   */
  export type UserApiHistoryModelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserApiHistoryModels.
     */
    data: UserApiHistoryModelCreateManyInput | UserApiHistoryModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserApiHistoryModel createManyAndReturn
   */
  export type UserApiHistoryModelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserApiHistoryModels.
     */
    data: UserApiHistoryModelCreateManyInput | UserApiHistoryModelCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserApiHistoryModel update
   */
  export type UserApiHistoryModelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * The data needed to update a UserApiHistoryModel.
     */
    data: XOR<UserApiHistoryModelUpdateInput, UserApiHistoryModelUncheckedUpdateInput>
    /**
     * Choose, which UserApiHistoryModel to update.
     */
    where: UserApiHistoryModelWhereUniqueInput
  }

  /**
   * UserApiHistoryModel updateMany
   */
  export type UserApiHistoryModelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserApiHistoryModels.
     */
    data: XOR<UserApiHistoryModelUpdateManyMutationInput, UserApiHistoryModelUncheckedUpdateManyInput>
    /**
     * Filter which UserApiHistoryModels to update
     */
    where?: UserApiHistoryModelWhereInput
  }

  /**
   * UserApiHistoryModel upsert
   */
  export type UserApiHistoryModelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * The filter to search for the UserApiHistoryModel to update in case it exists.
     */
    where: UserApiHistoryModelWhereUniqueInput
    /**
     * In case the UserApiHistoryModel found by the `where` argument doesn't exist, create a new UserApiHistoryModel with this data.
     */
    create: XOR<UserApiHistoryModelCreateInput, UserApiHistoryModelUncheckedCreateInput>
    /**
     * In case the UserApiHistoryModel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserApiHistoryModelUpdateInput, UserApiHistoryModelUncheckedUpdateInput>
  }

  /**
   * UserApiHistoryModel delete
   */
  export type UserApiHistoryModelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    /**
     * Filter which UserApiHistoryModel to delete.
     */
    where: UserApiHistoryModelWhereUniqueInput
  }

  /**
   * UserApiHistoryModel deleteMany
   */
  export type UserApiHistoryModelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserApiHistoryModels to delete
     */
    where?: UserApiHistoryModelWhereInput
  }

  /**
   * UserApiHistoryModel.userModel
   */
  export type UserApiHistoryModel$userModelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    where?: UserModelWhereInput
  }

  /**
   * UserApiHistoryModel without action
   */
  export type UserApiHistoryModelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
  }


  /**
   * Model UserModel
   */

  export type AggregateUserModel = {
    _count: UserModelCountAggregateOutputType | null
    _avg: UserModelAvgAggregateOutputType | null
    _sum: UserModelSumAggregateOutputType | null
    _min: UserModelMinAggregateOutputType | null
    _max: UserModelMaxAggregateOutputType | null
  }

  export type UserModelAvgAggregateOutputType = {
    id: number | null
    pid: number | null
  }

  export type UserModelSumAggregateOutputType = {
    id: number | null
    pid: bigint | null
  }

  export type UserModelMinAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    platform: $Enums.UserPlatform | null
    pid: bigint | null
    username: string | null
    nickname: string | null
    firstName: string | null
    lastName: string | null
  }

  export type UserModelMaxAggregateOutputType = {
    id: number | null
    createdAt: Date | null
    updatedAt: Date | null
    platform: $Enums.UserPlatform | null
    pid: bigint | null
    username: string | null
    nickname: string | null
    firstName: string | null
    lastName: string | null
  }

  export type UserModelCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    platform: number
    pid: number
    username: number
    nickname: number
    firstName: number
    lastName: number
    _all: number
  }


  export type UserModelAvgAggregateInputType = {
    id?: true
    pid?: true
  }

  export type UserModelSumAggregateInputType = {
    id?: true
    pid?: true
  }

  export type UserModelMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    platform?: true
    pid?: true
    username?: true
    nickname?: true
    firstName?: true
    lastName?: true
  }

  export type UserModelMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    platform?: true
    pid?: true
    username?: true
    nickname?: true
    firstName?: true
    lastName?: true
  }

  export type UserModelCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    platform?: true
    pid?: true
    username?: true
    nickname?: true
    firstName?: true
    lastName?: true
    _all?: true
  }

  export type UserModelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserModel to aggregate.
     */
    where?: UserModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserModels to fetch.
     */
    orderBy?: UserModelOrderByWithRelationInput | UserModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserModels
    **/
    _count?: true | UserModelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserModelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserModelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserModelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserModelMaxAggregateInputType
  }

  export type GetUserModelAggregateType<T extends UserModelAggregateArgs> = {
        [P in keyof T & keyof AggregateUserModel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserModel[P]>
      : GetScalarType<T[P], AggregateUserModel[P]>
  }




  export type UserModelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserModelWhereInput
    orderBy?: UserModelOrderByWithAggregationInput | UserModelOrderByWithAggregationInput[]
    by: UserModelScalarFieldEnum[] | UserModelScalarFieldEnum
    having?: UserModelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserModelCountAggregateInputType | true
    _avg?: UserModelAvgAggregateInputType
    _sum?: UserModelSumAggregateInputType
    _min?: UserModelMinAggregateInputType
    _max?: UserModelMaxAggregateInputType
  }

  export type UserModelGroupByOutputType = {
    id: number
    createdAt: Date
    updatedAt: Date
    platform: $Enums.UserPlatform
    pid: bigint
    username: string | null
    nickname: string
    firstName: string | null
    lastName: string | null
    _count: UserModelCountAggregateOutputType | null
    _avg: UserModelAvgAggregateOutputType | null
    _sum: UserModelSumAggregateOutputType | null
    _min: UserModelMinAggregateOutputType | null
    _max: UserModelMaxAggregateOutputType | null
  }

  type GetUserModelGroupByPayload<T extends UserModelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserModelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserModelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserModelGroupByOutputType[P]>
            : GetScalarType<T[P], UserModelGroupByOutputType[P]>
        }
      >
    >


  export type UserModelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    platform?: boolean
    pid?: boolean
    username?: boolean
    nickname?: boolean
    firstName?: boolean
    lastName?: boolean
    apiKey?: boolean | UserModel$apiKeyArgs<ExtArgs>
    apiHistories?: boolean | UserModel$apiHistoriesArgs<ExtArgs>
    llmApiKeys?: boolean | UserModel$llmApiKeysArgs<ExtArgs>
    _count?: boolean | UserModelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userModel"]>

  export type UserModelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    platform?: boolean
    pid?: boolean
    username?: boolean
    nickname?: boolean
    firstName?: boolean
    lastName?: boolean
  }, ExtArgs["result"]["userModel"]>

  export type UserModelSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    platform?: boolean
    pid?: boolean
    username?: boolean
    nickname?: boolean
    firstName?: boolean
    lastName?: boolean
  }

  export type UserModelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    apiKey?: boolean | UserModel$apiKeyArgs<ExtArgs>
    apiHistories?: boolean | UserModel$apiHistoriesArgs<ExtArgs>
    llmApiKeys?: boolean | UserModel$llmApiKeysArgs<ExtArgs>
    _count?: boolean | UserModelCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserModelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserModelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserModel"
    objects: {
      apiKey: Prisma.$UserApiKeyModelPayload<ExtArgs> | null
      apiHistories: Prisma.$UserApiHistoryModelPayload<ExtArgs>[]
      llmApiKeys: Prisma.$LlmApiKeyModelPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      createdAt: Date
      updatedAt: Date
      platform: $Enums.UserPlatform
      pid: bigint
      username: string | null
      nickname: string
      firstName: string | null
      lastName: string | null
    }, ExtArgs["result"]["userModel"]>
    composites: {}
  }

  type UserModelGetPayload<S extends boolean | null | undefined | UserModelDefaultArgs> = $Result.GetResult<Prisma.$UserModelPayload, S>

  type UserModelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserModelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserModelCountAggregateInputType | true
    }

  export interface UserModelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserModel'], meta: { name: 'UserModel' } }
    /**
     * Find zero or one UserModel that matches the filter.
     * @param {UserModelFindUniqueArgs} args - Arguments to find a UserModel
     * @example
     * // Get one UserModel
     * const userModel = await prisma.userModel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserModelFindUniqueArgs>(args: SelectSubset<T, UserModelFindUniqueArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserModel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserModelFindUniqueOrThrowArgs} args - Arguments to find a UserModel
     * @example
     * // Get one UserModel
     * const userModel = await prisma.userModel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserModelFindUniqueOrThrowArgs>(args: SelectSubset<T, UserModelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserModel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserModelFindFirstArgs} args - Arguments to find a UserModel
     * @example
     * // Get one UserModel
     * const userModel = await prisma.userModel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserModelFindFirstArgs>(args?: SelectSubset<T, UserModelFindFirstArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserModel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserModelFindFirstOrThrowArgs} args - Arguments to find a UserModel
     * @example
     * // Get one UserModel
     * const userModel = await prisma.userModel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserModelFindFirstOrThrowArgs>(args?: SelectSubset<T, UserModelFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserModels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserModelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserModels
     * const userModels = await prisma.userModel.findMany()
     * 
     * // Get first 10 UserModels
     * const userModels = await prisma.userModel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userModelWithIdOnly = await prisma.userModel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserModelFindManyArgs>(args?: SelectSubset<T, UserModelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserModel.
     * @param {UserModelCreateArgs} args - Arguments to create a UserModel.
     * @example
     * // Create one UserModel
     * const UserModel = await prisma.userModel.create({
     *   data: {
     *     // ... data to create a UserModel
     *   }
     * })
     * 
     */
    create<T extends UserModelCreateArgs>(args: SelectSubset<T, UserModelCreateArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserModels.
     * @param {UserModelCreateManyArgs} args - Arguments to create many UserModels.
     * @example
     * // Create many UserModels
     * const userModel = await prisma.userModel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserModelCreateManyArgs>(args?: SelectSubset<T, UserModelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserModels and returns the data saved in the database.
     * @param {UserModelCreateManyAndReturnArgs} args - Arguments to create many UserModels.
     * @example
     * // Create many UserModels
     * const userModel = await prisma.userModel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserModels and only return the `id`
     * const userModelWithIdOnly = await prisma.userModel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserModelCreateManyAndReturnArgs>(args?: SelectSubset<T, UserModelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserModel.
     * @param {UserModelDeleteArgs} args - Arguments to delete one UserModel.
     * @example
     * // Delete one UserModel
     * const UserModel = await prisma.userModel.delete({
     *   where: {
     *     // ... filter to delete one UserModel
     *   }
     * })
     * 
     */
    delete<T extends UserModelDeleteArgs>(args: SelectSubset<T, UserModelDeleteArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserModel.
     * @param {UserModelUpdateArgs} args - Arguments to update one UserModel.
     * @example
     * // Update one UserModel
     * const userModel = await prisma.userModel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserModelUpdateArgs>(args: SelectSubset<T, UserModelUpdateArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserModels.
     * @param {UserModelDeleteManyArgs} args - Arguments to filter UserModels to delete.
     * @example
     * // Delete a few UserModels
     * const { count } = await prisma.userModel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserModelDeleteManyArgs>(args?: SelectSubset<T, UserModelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserModelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserModels
     * const userModel = await prisma.userModel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserModelUpdateManyArgs>(args: SelectSubset<T, UserModelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserModel.
     * @param {UserModelUpsertArgs} args - Arguments to update or create a UserModel.
     * @example
     * // Update or create a UserModel
     * const userModel = await prisma.userModel.upsert({
     *   create: {
     *     // ... data to create a UserModel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserModel we want to update
     *   }
     * })
     */
    upsert<T extends UserModelUpsertArgs>(args: SelectSubset<T, UserModelUpsertArgs<ExtArgs>>): Prisma__UserModelClient<$Result.GetResult<Prisma.$UserModelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserModels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserModelCountArgs} args - Arguments to filter UserModels to count.
     * @example
     * // Count the number of UserModels
     * const count = await prisma.userModel.count({
     *   where: {
     *     // ... the filter for the UserModels we want to count
     *   }
     * })
    **/
    count<T extends UserModelCountArgs>(
      args?: Subset<T, UserModelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserModelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserModelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserModelAggregateArgs>(args: Subset<T, UserModelAggregateArgs>): Prisma.PrismaPromise<GetUserModelAggregateType<T>>

    /**
     * Group by UserModel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserModelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserModelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserModelGroupByArgs['orderBy'] }
        : { orderBy?: UserModelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserModelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserModelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserModel model
   */
  readonly fields: UserModelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserModel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserModelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    apiKey<T extends UserModel$apiKeyArgs<ExtArgs> = {}>(args?: Subset<T, UserModel$apiKeyArgs<ExtArgs>>): Prisma__UserApiKeyModelClient<$Result.GetResult<Prisma.$UserApiKeyModelPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    apiHistories<T extends UserModel$apiHistoriesArgs<ExtArgs> = {}>(args?: Subset<T, UserModel$apiHistoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserApiHistoryModelPayload<ExtArgs>, T, "findMany"> | Null>
    llmApiKeys<T extends UserModel$llmApiKeysArgs<ExtArgs> = {}>(args?: Subset<T, UserModel$llmApiKeysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmApiKeyModelPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserModel model
   */ 
  interface UserModelFieldRefs {
    readonly id: FieldRef<"UserModel", 'Int'>
    readonly createdAt: FieldRef<"UserModel", 'DateTime'>
    readonly updatedAt: FieldRef<"UserModel", 'DateTime'>
    readonly platform: FieldRef<"UserModel", 'UserPlatform'>
    readonly pid: FieldRef<"UserModel", 'BigInt'>
    readonly username: FieldRef<"UserModel", 'String'>
    readonly nickname: FieldRef<"UserModel", 'String'>
    readonly firstName: FieldRef<"UserModel", 'String'>
    readonly lastName: FieldRef<"UserModel", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserModel findUnique
   */
  export type UserModelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * Filter, which UserModel to fetch.
     */
    where: UserModelWhereUniqueInput
  }

  /**
   * UserModel findUniqueOrThrow
   */
  export type UserModelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * Filter, which UserModel to fetch.
     */
    where: UserModelWhereUniqueInput
  }

  /**
   * UserModel findFirst
   */
  export type UserModelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * Filter, which UserModel to fetch.
     */
    where?: UserModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserModels to fetch.
     */
    orderBy?: UserModelOrderByWithRelationInput | UserModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserModels.
     */
    cursor?: UserModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserModels.
     */
    distinct?: UserModelScalarFieldEnum | UserModelScalarFieldEnum[]
  }

  /**
   * UserModel findFirstOrThrow
   */
  export type UserModelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * Filter, which UserModel to fetch.
     */
    where?: UserModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserModels to fetch.
     */
    orderBy?: UserModelOrderByWithRelationInput | UserModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserModels.
     */
    cursor?: UserModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserModels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserModels.
     */
    distinct?: UserModelScalarFieldEnum | UserModelScalarFieldEnum[]
  }

  /**
   * UserModel findMany
   */
  export type UserModelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * Filter, which UserModels to fetch.
     */
    where?: UserModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserModels to fetch.
     */
    orderBy?: UserModelOrderByWithRelationInput | UserModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserModels.
     */
    cursor?: UserModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserModels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserModels.
     */
    skip?: number
    distinct?: UserModelScalarFieldEnum | UserModelScalarFieldEnum[]
  }

  /**
   * UserModel create
   */
  export type UserModelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * The data needed to create a UserModel.
     */
    data: XOR<UserModelCreateInput, UserModelUncheckedCreateInput>
  }

  /**
   * UserModel createMany
   */
  export type UserModelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserModels.
     */
    data: UserModelCreateManyInput | UserModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserModel createManyAndReturn
   */
  export type UserModelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserModels.
     */
    data: UserModelCreateManyInput | UserModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserModel update
   */
  export type UserModelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * The data needed to update a UserModel.
     */
    data: XOR<UserModelUpdateInput, UserModelUncheckedUpdateInput>
    /**
     * Choose, which UserModel to update.
     */
    where: UserModelWhereUniqueInput
  }

  /**
   * UserModel updateMany
   */
  export type UserModelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserModels.
     */
    data: XOR<UserModelUpdateManyMutationInput, UserModelUncheckedUpdateManyInput>
    /**
     * Filter which UserModels to update
     */
    where?: UserModelWhereInput
  }

  /**
   * UserModel upsert
   */
  export type UserModelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * The filter to search for the UserModel to update in case it exists.
     */
    where: UserModelWhereUniqueInput
    /**
     * In case the UserModel found by the `where` argument doesn't exist, create a new UserModel with this data.
     */
    create: XOR<UserModelCreateInput, UserModelUncheckedCreateInput>
    /**
     * In case the UserModel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserModelUpdateInput, UserModelUncheckedUpdateInput>
  }

  /**
   * UserModel delete
   */
  export type UserModelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
    /**
     * Filter which UserModel to delete.
     */
    where: UserModelWhereUniqueInput
  }

  /**
   * UserModel deleteMany
   */
  export type UserModelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserModels to delete
     */
    where?: UserModelWhereInput
  }

  /**
   * UserModel.apiKey
   */
  export type UserModel$apiKeyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiKeyModel
     */
    select?: UserApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiKeyModelInclude<ExtArgs> | null
    where?: UserApiKeyModelWhereInput
  }

  /**
   * UserModel.apiHistories
   */
  export type UserModel$apiHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserApiHistoryModel
     */
    select?: UserApiHistoryModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserApiHistoryModelInclude<ExtArgs> | null
    where?: UserApiHistoryModelWhereInput
    orderBy?: UserApiHistoryModelOrderByWithRelationInput | UserApiHistoryModelOrderByWithRelationInput[]
    cursor?: UserApiHistoryModelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserApiHistoryModelScalarFieldEnum | UserApiHistoryModelScalarFieldEnum[]
  }

  /**
   * UserModel.llmApiKeys
   */
  export type UserModel$llmApiKeysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmApiKeyModel
     */
    select?: LlmApiKeyModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmApiKeyModelInclude<ExtArgs> | null
    where?: LlmApiKeyModelWhereInput
    orderBy?: LlmApiKeyModelOrderByWithRelationInput | LlmApiKeyModelOrderByWithRelationInput[]
    cursor?: LlmApiKeyModelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LlmApiKeyModelScalarFieldEnum | LlmApiKeyModelScalarFieldEnum[]
  }

  /**
   * UserModel without action
   */
  export type UserModelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserModel
     */
    select?: UserModelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserModelInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AgentModelScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    core: 'core',
    meta: 'meta'
  };

  export type AgentModelScalarFieldEnum = (typeof AgentModelScalarFieldEnum)[keyof typeof AgentModelScalarFieldEnum]


  export const LlmApiModelScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    platform: 'platform',
    model: 'model'
  };

  export type LlmApiModelScalarFieldEnum = (typeof LlmApiModelScalarFieldEnum)[keyof typeof LlmApiModelScalarFieldEnum]


  export const LlmApiKeyModelScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userModelId: 'userModelId',
    platform: 'platform',
    key: 'key'
  };

  export type LlmApiKeyModelScalarFieldEnum = (typeof LlmApiKeyModelScalarFieldEnum)[keyof typeof LlmApiKeyModelScalarFieldEnum]


  export const LocationModelScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    core: 'core',
    meta: 'meta'
  };

  export type LocationModelScalarFieldEnum = (typeof LocationModelScalarFieldEnum)[keyof typeof LocationModelScalarFieldEnum]


  export const UserApiKeyModelScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userModelId: 'userModelId',
    key: 'key'
  };

  export type UserApiKeyModelScalarFieldEnum = (typeof UserApiKeyModelScalarFieldEnum)[keyof typeof UserApiKeyModelScalarFieldEnum]


  export const UserApiHistoryModelScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userModelId: 'userModelId',
    request: 'request',
    response: 'response'
  };

  export type UserApiHistoryModelScalarFieldEnum = (typeof UserApiHistoryModelScalarFieldEnum)[keyof typeof UserApiHistoryModelScalarFieldEnum]


  export const UserModelScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    platform: 'platform',
    pid: 'pid',
    username: 'username',
    nickname: 'nickname',
    firstName: 'firstName',
    lastName: 'lastName'
  };

  export type UserModelScalarFieldEnum = (typeof UserModelScalarFieldEnum)[keyof typeof UserModelScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'LLMPlatform'
   */
  export type EnumLLMPlatformFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LLMPlatform'>
    


  /**
   * Reference to a field of type 'LLMPlatform[]'
   */
  export type ListEnumLLMPlatformFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LLMPlatform[]'>
    


  /**
   * Reference to a field of type 'UserPlatform'
   */
  export type EnumUserPlatformFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserPlatform'>
    


  /**
   * Reference to a field of type 'UserPlatform[]'
   */
  export type ListEnumUserPlatformFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserPlatform[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AgentModelWhereInput = {
    AND?: AgentModelWhereInput | AgentModelWhereInput[]
    OR?: AgentModelWhereInput[]
    NOT?: AgentModelWhereInput | AgentModelWhereInput[]
    id?: IntFilter<"AgentModel"> | number
    createdAt?: DateTimeFilter<"AgentModel"> | Date | string
    updatedAt?: DateTimeFilter<"AgentModel"> | Date | string
    name?: StringFilter<"AgentModel"> | string
    core?: StringFilter<"AgentModel"> | string
    meta?: JsonFilter<"AgentModel">
    llmApis?: LlmApiModelListRelationFilter
  }

  export type AgentModelOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
    meta?: SortOrder
    llmApis?: LlmApiModelOrderByRelationAggregateInput
  }

  export type AgentModelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AgentModelWhereInput | AgentModelWhereInput[]
    OR?: AgentModelWhereInput[]
    NOT?: AgentModelWhereInput | AgentModelWhereInput[]
    createdAt?: DateTimeFilter<"AgentModel"> | Date | string
    updatedAt?: DateTimeFilter<"AgentModel"> | Date | string
    name?: StringFilter<"AgentModel"> | string
    core?: StringFilter<"AgentModel"> | string
    meta?: JsonFilter<"AgentModel">
    llmApis?: LlmApiModelListRelationFilter
  }, "id">

  export type AgentModelOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
    meta?: SortOrder
    _count?: AgentModelCountOrderByAggregateInput
    _avg?: AgentModelAvgOrderByAggregateInput
    _max?: AgentModelMaxOrderByAggregateInput
    _min?: AgentModelMinOrderByAggregateInput
    _sum?: AgentModelSumOrderByAggregateInput
  }

  export type AgentModelScalarWhereWithAggregatesInput = {
    AND?: AgentModelScalarWhereWithAggregatesInput | AgentModelScalarWhereWithAggregatesInput[]
    OR?: AgentModelScalarWhereWithAggregatesInput[]
    NOT?: AgentModelScalarWhereWithAggregatesInput | AgentModelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AgentModel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AgentModel"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AgentModel"> | Date | string
    name?: StringWithAggregatesFilter<"AgentModel"> | string
    core?: StringWithAggregatesFilter<"AgentModel"> | string
    meta?: JsonWithAggregatesFilter<"AgentModel">
  }

  export type LlmApiModelWhereInput = {
    AND?: LlmApiModelWhereInput | LlmApiModelWhereInput[]
    OR?: LlmApiModelWhereInput[]
    NOT?: LlmApiModelWhereInput | LlmApiModelWhereInput[]
    id?: IntFilter<"LlmApiModel"> | number
    createdAt?: DateTimeFilter<"LlmApiModel"> | Date | string
    updatedAt?: DateTimeFilter<"LlmApiModel"> | Date | string
    platform?: EnumLLMPlatformFilter<"LlmApiModel"> | $Enums.LLMPlatform
    model?: StringFilter<"LlmApiModel"> | string
    agents?: AgentModelListRelationFilter
  }

  export type LlmApiModelOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    model?: SortOrder
    agents?: AgentModelOrderByRelationAggregateInput
  }

  export type LlmApiModelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: LlmApiModelWhereInput | LlmApiModelWhereInput[]
    OR?: LlmApiModelWhereInput[]
    NOT?: LlmApiModelWhereInput | LlmApiModelWhereInput[]
    createdAt?: DateTimeFilter<"LlmApiModel"> | Date | string
    updatedAt?: DateTimeFilter<"LlmApiModel"> | Date | string
    platform?: EnumLLMPlatformFilter<"LlmApiModel"> | $Enums.LLMPlatform
    model?: StringFilter<"LlmApiModel"> | string
    agents?: AgentModelListRelationFilter
  }, "id">

  export type LlmApiModelOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    model?: SortOrder
    _count?: LlmApiModelCountOrderByAggregateInput
    _avg?: LlmApiModelAvgOrderByAggregateInput
    _max?: LlmApiModelMaxOrderByAggregateInput
    _min?: LlmApiModelMinOrderByAggregateInput
    _sum?: LlmApiModelSumOrderByAggregateInput
  }

  export type LlmApiModelScalarWhereWithAggregatesInput = {
    AND?: LlmApiModelScalarWhereWithAggregatesInput | LlmApiModelScalarWhereWithAggregatesInput[]
    OR?: LlmApiModelScalarWhereWithAggregatesInput[]
    NOT?: LlmApiModelScalarWhereWithAggregatesInput | LlmApiModelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LlmApiModel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"LlmApiModel"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"LlmApiModel"> | Date | string
    platform?: EnumLLMPlatformWithAggregatesFilter<"LlmApiModel"> | $Enums.LLMPlatform
    model?: StringWithAggregatesFilter<"LlmApiModel"> | string
  }

  export type LlmApiKeyModelWhereInput = {
    AND?: LlmApiKeyModelWhereInput | LlmApiKeyModelWhereInput[]
    OR?: LlmApiKeyModelWhereInput[]
    NOT?: LlmApiKeyModelWhereInput | LlmApiKeyModelWhereInput[]
    id?: IntFilter<"LlmApiKeyModel"> | number
    createdAt?: DateTimeFilter<"LlmApiKeyModel"> | Date | string
    updatedAt?: DateTimeFilter<"LlmApiKeyModel"> | Date | string
    userModelId?: IntNullableFilter<"LlmApiKeyModel"> | number | null
    platform?: EnumLLMPlatformFilter<"LlmApiKeyModel"> | $Enums.LLMPlatform
    key?: StringFilter<"LlmApiKeyModel"> | string
    userModel?: XOR<UserModelNullableScalarRelationFilter, UserModelWhereInput> | null
  }

  export type LlmApiKeyModelOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrderInput | SortOrder
    platform?: SortOrder
    key?: SortOrder
    userModel?: UserModelOrderByWithRelationInput
  }

  export type LlmApiKeyModelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userModelId_platform?: LlmApiKeyModelUserModelIdPlatformCompoundUniqueInput
    AND?: LlmApiKeyModelWhereInput | LlmApiKeyModelWhereInput[]
    OR?: LlmApiKeyModelWhereInput[]
    NOT?: LlmApiKeyModelWhereInput | LlmApiKeyModelWhereInput[]
    createdAt?: DateTimeFilter<"LlmApiKeyModel"> | Date | string
    updatedAt?: DateTimeFilter<"LlmApiKeyModel"> | Date | string
    userModelId?: IntNullableFilter<"LlmApiKeyModel"> | number | null
    platform?: EnumLLMPlatformFilter<"LlmApiKeyModel"> | $Enums.LLMPlatform
    key?: StringFilter<"LlmApiKeyModel"> | string
    userModel?: XOR<UserModelNullableScalarRelationFilter, UserModelWhereInput> | null
  }, "id" | "userModelId_platform">

  export type LlmApiKeyModelOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrderInput | SortOrder
    platform?: SortOrder
    key?: SortOrder
    _count?: LlmApiKeyModelCountOrderByAggregateInput
    _avg?: LlmApiKeyModelAvgOrderByAggregateInput
    _max?: LlmApiKeyModelMaxOrderByAggregateInput
    _min?: LlmApiKeyModelMinOrderByAggregateInput
    _sum?: LlmApiKeyModelSumOrderByAggregateInput
  }

  export type LlmApiKeyModelScalarWhereWithAggregatesInput = {
    AND?: LlmApiKeyModelScalarWhereWithAggregatesInput | LlmApiKeyModelScalarWhereWithAggregatesInput[]
    OR?: LlmApiKeyModelScalarWhereWithAggregatesInput[]
    NOT?: LlmApiKeyModelScalarWhereWithAggregatesInput | LlmApiKeyModelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LlmApiKeyModel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"LlmApiKeyModel"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"LlmApiKeyModel"> | Date | string
    userModelId?: IntNullableWithAggregatesFilter<"LlmApiKeyModel"> | number | null
    platform?: EnumLLMPlatformWithAggregatesFilter<"LlmApiKeyModel"> | $Enums.LLMPlatform
    key?: StringWithAggregatesFilter<"LlmApiKeyModel"> | string
  }

  export type LocationModelWhereInput = {
    AND?: LocationModelWhereInput | LocationModelWhereInput[]
    OR?: LocationModelWhereInput[]
    NOT?: LocationModelWhereInput | LocationModelWhereInput[]
    id?: IntFilter<"LocationModel"> | number
    createdAt?: DateTimeFilter<"LocationModel"> | Date | string
    updatedAt?: DateTimeFilter<"LocationModel"> | Date | string
    name?: StringFilter<"LocationModel"> | string
    core?: StringFilter<"LocationModel"> | string
    meta?: JsonFilter<"LocationModel">
  }

  export type LocationModelOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
    meta?: SortOrder
  }

  export type LocationModelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: LocationModelWhereInput | LocationModelWhereInput[]
    OR?: LocationModelWhereInput[]
    NOT?: LocationModelWhereInput | LocationModelWhereInput[]
    createdAt?: DateTimeFilter<"LocationModel"> | Date | string
    updatedAt?: DateTimeFilter<"LocationModel"> | Date | string
    core?: StringFilter<"LocationModel"> | string
    meta?: JsonFilter<"LocationModel">
  }, "id" | "name">

  export type LocationModelOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
    meta?: SortOrder
    _count?: LocationModelCountOrderByAggregateInput
    _avg?: LocationModelAvgOrderByAggregateInput
    _max?: LocationModelMaxOrderByAggregateInput
    _min?: LocationModelMinOrderByAggregateInput
    _sum?: LocationModelSumOrderByAggregateInput
  }

  export type LocationModelScalarWhereWithAggregatesInput = {
    AND?: LocationModelScalarWhereWithAggregatesInput | LocationModelScalarWhereWithAggregatesInput[]
    OR?: LocationModelScalarWhereWithAggregatesInput[]
    NOT?: LocationModelScalarWhereWithAggregatesInput | LocationModelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LocationModel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"LocationModel"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"LocationModel"> | Date | string
    name?: StringWithAggregatesFilter<"LocationModel"> | string
    core?: StringWithAggregatesFilter<"LocationModel"> | string
    meta?: JsonWithAggregatesFilter<"LocationModel">
  }

  export type UserApiKeyModelWhereInput = {
    AND?: UserApiKeyModelWhereInput | UserApiKeyModelWhereInput[]
    OR?: UserApiKeyModelWhereInput[]
    NOT?: UserApiKeyModelWhereInput | UserApiKeyModelWhereInput[]
    id?: IntFilter<"UserApiKeyModel"> | number
    createdAt?: DateTimeFilter<"UserApiKeyModel"> | Date | string
    updatedAt?: DateTimeFilter<"UserApiKeyModel"> | Date | string
    userModelId?: IntNullableFilter<"UserApiKeyModel"> | number | null
    key?: StringFilter<"UserApiKeyModel"> | string
    userModel?: XOR<UserModelNullableScalarRelationFilter, UserModelWhereInput> | null
  }

  export type UserApiKeyModelOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrderInput | SortOrder
    key?: SortOrder
    userModel?: UserModelOrderByWithRelationInput
  }

  export type UserApiKeyModelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userModelId?: number
    AND?: UserApiKeyModelWhereInput | UserApiKeyModelWhereInput[]
    OR?: UserApiKeyModelWhereInput[]
    NOT?: UserApiKeyModelWhereInput | UserApiKeyModelWhereInput[]
    createdAt?: DateTimeFilter<"UserApiKeyModel"> | Date | string
    updatedAt?: DateTimeFilter<"UserApiKeyModel"> | Date | string
    key?: StringFilter<"UserApiKeyModel"> | string
    userModel?: XOR<UserModelNullableScalarRelationFilter, UserModelWhereInput> | null
  }, "id" | "userModelId">

  export type UserApiKeyModelOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrderInput | SortOrder
    key?: SortOrder
    _count?: UserApiKeyModelCountOrderByAggregateInput
    _avg?: UserApiKeyModelAvgOrderByAggregateInput
    _max?: UserApiKeyModelMaxOrderByAggregateInput
    _min?: UserApiKeyModelMinOrderByAggregateInput
    _sum?: UserApiKeyModelSumOrderByAggregateInput
  }

  export type UserApiKeyModelScalarWhereWithAggregatesInput = {
    AND?: UserApiKeyModelScalarWhereWithAggregatesInput | UserApiKeyModelScalarWhereWithAggregatesInput[]
    OR?: UserApiKeyModelScalarWhereWithAggregatesInput[]
    NOT?: UserApiKeyModelScalarWhereWithAggregatesInput | UserApiKeyModelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserApiKeyModel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"UserApiKeyModel"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserApiKeyModel"> | Date | string
    userModelId?: IntNullableWithAggregatesFilter<"UserApiKeyModel"> | number | null
    key?: StringWithAggregatesFilter<"UserApiKeyModel"> | string
  }

  export type UserApiHistoryModelWhereInput = {
    AND?: UserApiHistoryModelWhereInput | UserApiHistoryModelWhereInput[]
    OR?: UserApiHistoryModelWhereInput[]
    NOT?: UserApiHistoryModelWhereInput | UserApiHistoryModelWhereInput[]
    id?: IntFilter<"UserApiHistoryModel"> | number
    createdAt?: DateTimeFilter<"UserApiHistoryModel"> | Date | string
    updatedAt?: DateTimeFilter<"UserApiHistoryModel"> | Date | string
    userModelId?: IntNullableFilter<"UserApiHistoryModel"> | number | null
    request?: JsonFilter<"UserApiHistoryModel">
    response?: JsonFilter<"UserApiHistoryModel">
    userModel?: XOR<UserModelNullableScalarRelationFilter, UserModelWhereInput> | null
  }

  export type UserApiHistoryModelOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrderInput | SortOrder
    request?: SortOrder
    response?: SortOrder
    userModel?: UserModelOrderByWithRelationInput
  }

  export type UserApiHistoryModelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UserApiHistoryModelWhereInput | UserApiHistoryModelWhereInput[]
    OR?: UserApiHistoryModelWhereInput[]
    NOT?: UserApiHistoryModelWhereInput | UserApiHistoryModelWhereInput[]
    createdAt?: DateTimeFilter<"UserApiHistoryModel"> | Date | string
    updatedAt?: DateTimeFilter<"UserApiHistoryModel"> | Date | string
    userModelId?: IntNullableFilter<"UserApiHistoryModel"> | number | null
    request?: JsonFilter<"UserApiHistoryModel">
    response?: JsonFilter<"UserApiHistoryModel">
    userModel?: XOR<UserModelNullableScalarRelationFilter, UserModelWhereInput> | null
  }, "id">

  export type UserApiHistoryModelOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrderInput | SortOrder
    request?: SortOrder
    response?: SortOrder
    _count?: UserApiHistoryModelCountOrderByAggregateInput
    _avg?: UserApiHistoryModelAvgOrderByAggregateInput
    _max?: UserApiHistoryModelMaxOrderByAggregateInput
    _min?: UserApiHistoryModelMinOrderByAggregateInput
    _sum?: UserApiHistoryModelSumOrderByAggregateInput
  }

  export type UserApiHistoryModelScalarWhereWithAggregatesInput = {
    AND?: UserApiHistoryModelScalarWhereWithAggregatesInput | UserApiHistoryModelScalarWhereWithAggregatesInput[]
    OR?: UserApiHistoryModelScalarWhereWithAggregatesInput[]
    NOT?: UserApiHistoryModelScalarWhereWithAggregatesInput | UserApiHistoryModelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserApiHistoryModel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"UserApiHistoryModel"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserApiHistoryModel"> | Date | string
    userModelId?: IntNullableWithAggregatesFilter<"UserApiHistoryModel"> | number | null
    request?: JsonWithAggregatesFilter<"UserApiHistoryModel">
    response?: JsonWithAggregatesFilter<"UserApiHistoryModel">
  }

  export type UserModelWhereInput = {
    AND?: UserModelWhereInput | UserModelWhereInput[]
    OR?: UserModelWhereInput[]
    NOT?: UserModelWhereInput | UserModelWhereInput[]
    id?: IntFilter<"UserModel"> | number
    createdAt?: DateTimeFilter<"UserModel"> | Date | string
    updatedAt?: DateTimeFilter<"UserModel"> | Date | string
    platform?: EnumUserPlatformFilter<"UserModel"> | $Enums.UserPlatform
    pid?: BigIntFilter<"UserModel"> | bigint | number
    username?: StringNullableFilter<"UserModel"> | string | null
    nickname?: StringFilter<"UserModel"> | string
    firstName?: StringNullableFilter<"UserModel"> | string | null
    lastName?: StringNullableFilter<"UserModel"> | string | null
    apiKey?: XOR<UserApiKeyModelNullableScalarRelationFilter, UserApiKeyModelWhereInput> | null
    apiHistories?: UserApiHistoryModelListRelationFilter
    llmApiKeys?: LlmApiKeyModelListRelationFilter
  }

  export type UserModelOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    pid?: SortOrder
    username?: SortOrderInput | SortOrder
    nickname?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    apiKey?: UserApiKeyModelOrderByWithRelationInput
    apiHistories?: UserApiHistoryModelOrderByRelationAggregateInput
    llmApiKeys?: LlmApiKeyModelOrderByRelationAggregateInput
  }

  export type UserModelWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    pid?: bigint | number
    AND?: UserModelWhereInput | UserModelWhereInput[]
    OR?: UserModelWhereInput[]
    NOT?: UserModelWhereInput | UserModelWhereInput[]
    createdAt?: DateTimeFilter<"UserModel"> | Date | string
    updatedAt?: DateTimeFilter<"UserModel"> | Date | string
    platform?: EnumUserPlatformFilter<"UserModel"> | $Enums.UserPlatform
    username?: StringNullableFilter<"UserModel"> | string | null
    nickname?: StringFilter<"UserModel"> | string
    firstName?: StringNullableFilter<"UserModel"> | string | null
    lastName?: StringNullableFilter<"UserModel"> | string | null
    apiKey?: XOR<UserApiKeyModelNullableScalarRelationFilter, UserApiKeyModelWhereInput> | null
    apiHistories?: UserApiHistoryModelListRelationFilter
    llmApiKeys?: LlmApiKeyModelListRelationFilter
  }, "id" | "pid">

  export type UserModelOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    pid?: SortOrder
    username?: SortOrderInput | SortOrder
    nickname?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    _count?: UserModelCountOrderByAggregateInput
    _avg?: UserModelAvgOrderByAggregateInput
    _max?: UserModelMaxOrderByAggregateInput
    _min?: UserModelMinOrderByAggregateInput
    _sum?: UserModelSumOrderByAggregateInput
  }

  export type UserModelScalarWhereWithAggregatesInput = {
    AND?: UserModelScalarWhereWithAggregatesInput | UserModelScalarWhereWithAggregatesInput[]
    OR?: UserModelScalarWhereWithAggregatesInput[]
    NOT?: UserModelScalarWhereWithAggregatesInput | UserModelScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserModel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"UserModel"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserModel"> | Date | string
    platform?: EnumUserPlatformWithAggregatesFilter<"UserModel"> | $Enums.UserPlatform
    pid?: BigIntWithAggregatesFilter<"UserModel"> | bigint | number
    username?: StringNullableWithAggregatesFilter<"UserModel"> | string | null
    nickname?: StringWithAggregatesFilter<"UserModel"> | string
    firstName?: StringNullableWithAggregatesFilter<"UserModel"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"UserModel"> | string | null
  }

  export type AgentModelCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    core: string
    meta?: JsonNullValueInput | InputJsonValue
    llmApis?: LlmApiModelCreateNestedManyWithoutAgentsInput
  }

  export type AgentModelUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    core: string
    meta?: JsonNullValueInput | InputJsonValue
    llmApis?: LlmApiModelUncheckedCreateNestedManyWithoutAgentsInput
  }

  export type AgentModelUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    llmApis?: LlmApiModelUpdateManyWithoutAgentsNestedInput
  }

  export type AgentModelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    llmApis?: LlmApiModelUncheckedUpdateManyWithoutAgentsNestedInput
  }

  export type AgentModelCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    core: string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type AgentModelUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type AgentModelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type LlmApiModelCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    model: string
    agents?: AgentModelCreateNestedManyWithoutLlmApisInput
  }

  export type LlmApiModelUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    model: string
    agents?: AgentModelUncheckedCreateNestedManyWithoutLlmApisInput
  }

  export type LlmApiModelUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    model?: StringFieldUpdateOperationsInput | string
    agents?: AgentModelUpdateManyWithoutLlmApisNestedInput
  }

  export type LlmApiModelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    model?: StringFieldUpdateOperationsInput | string
    agents?: AgentModelUncheckedUpdateManyWithoutLlmApisNestedInput
  }

  export type LlmApiModelCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    model: string
  }

  export type LlmApiModelUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    model?: StringFieldUpdateOperationsInput | string
  }

  export type LlmApiModelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    model?: StringFieldUpdateOperationsInput | string
  }

  export type LlmApiKeyModelCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    key: string
    userModel?: UserModelCreateNestedOneWithoutLlmApiKeysInput
  }

  export type LlmApiKeyModelUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userModelId?: number | null
    platform: $Enums.LLMPlatform
    key: string
  }

  export type LlmApiKeyModelUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    key?: StringFieldUpdateOperationsInput | string
    userModel?: UserModelUpdateOneWithoutLlmApiKeysNestedInput
  }

  export type LlmApiKeyModelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userModelId?: NullableIntFieldUpdateOperationsInput | number | null
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    key?: StringFieldUpdateOperationsInput | string
  }

  export type LlmApiKeyModelCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userModelId?: number | null
    platform: $Enums.LLMPlatform
    key: string
  }

  export type LlmApiKeyModelUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    key?: StringFieldUpdateOperationsInput | string
  }

  export type LlmApiKeyModelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userModelId?: NullableIntFieldUpdateOperationsInput | number | null
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    key?: StringFieldUpdateOperationsInput | string
  }

  export type LocationModelCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    core: string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type LocationModelUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    core: string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type LocationModelUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type LocationModelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type LocationModelCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    core: string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type LocationModelUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type LocationModelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type UserApiKeyModelCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    key: string
    userModel?: UserModelCreateNestedOneWithoutApiKeyInput
  }

  export type UserApiKeyModelUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userModelId?: number | null
    key: string
  }

  export type UserApiKeyModelUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
    userModel?: UserModelUpdateOneWithoutApiKeyNestedInput
  }

  export type UserApiKeyModelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userModelId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
  }

  export type UserApiKeyModelCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userModelId?: number | null
    key: string
  }

  export type UserApiKeyModelUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
  }

  export type UserApiKeyModelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userModelId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
  }

  export type UserApiHistoryModelCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    request: JsonNullValueInput | InputJsonValue
    response: JsonNullValueInput | InputJsonValue
    userModel?: UserModelCreateNestedOneWithoutApiHistoriesInput
  }

  export type UserApiHistoryModelUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userModelId?: number | null
    request: JsonNullValueInput | InputJsonValue
    response: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    request?: JsonNullValueInput | InputJsonValue
    response?: JsonNullValueInput | InputJsonValue
    userModel?: UserModelUpdateOneWithoutApiHistoriesNestedInput
  }

  export type UserApiHistoryModelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userModelId?: NullableIntFieldUpdateOperationsInput | number | null
    request?: JsonNullValueInput | InputJsonValue
    response?: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userModelId?: number | null
    request: JsonNullValueInput | InputJsonValue
    response: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    request?: JsonNullValueInput | InputJsonValue
    response?: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userModelId?: NullableIntFieldUpdateOperationsInput | number | null
    request?: JsonNullValueInput | InputJsonValue
    response?: JsonNullValueInput | InputJsonValue
  }

  export type UserModelCreateInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
    apiKey?: UserApiKeyModelCreateNestedOneWithoutUserModelInput
    apiHistories?: UserApiHistoryModelCreateNestedManyWithoutUserModelInput
    llmApiKeys?: LlmApiKeyModelCreateNestedManyWithoutUserModelInput
  }

  export type UserModelUncheckedCreateInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
    apiKey?: UserApiKeyModelUncheckedCreateNestedOneWithoutUserModelInput
    apiHistories?: UserApiHistoryModelUncheckedCreateNestedManyWithoutUserModelInput
    llmApiKeys?: LlmApiKeyModelUncheckedCreateNestedManyWithoutUserModelInput
  }

  export type UserModelUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    apiKey?: UserApiKeyModelUpdateOneWithoutUserModelNestedInput
    apiHistories?: UserApiHistoryModelUpdateManyWithoutUserModelNestedInput
    llmApiKeys?: LlmApiKeyModelUpdateManyWithoutUserModelNestedInput
  }

  export type UserModelUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    apiKey?: UserApiKeyModelUncheckedUpdateOneWithoutUserModelNestedInput
    apiHistories?: UserApiHistoryModelUncheckedUpdateManyWithoutUserModelNestedInput
    llmApiKeys?: LlmApiKeyModelUncheckedUpdateManyWithoutUserModelNestedInput
  }

  export type UserModelCreateManyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
  }

  export type UserModelUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserModelUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type LlmApiModelListRelationFilter = {
    every?: LlmApiModelWhereInput
    some?: LlmApiModelWhereInput
    none?: LlmApiModelWhereInput
  }

  export type LlmApiModelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgentModelCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
    meta?: SortOrder
  }

  export type AgentModelAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AgentModelMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
  }

  export type AgentModelMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
  }

  export type AgentModelSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumLLMPlatformFilter<$PrismaModel = never> = {
    equals?: $Enums.LLMPlatform | EnumLLMPlatformFieldRefInput<$PrismaModel>
    in?: $Enums.LLMPlatform[] | ListEnumLLMPlatformFieldRefInput<$PrismaModel>
    notIn?: $Enums.LLMPlatform[] | ListEnumLLMPlatformFieldRefInput<$PrismaModel>
    not?: NestedEnumLLMPlatformFilter<$PrismaModel> | $Enums.LLMPlatform
  }

  export type AgentModelListRelationFilter = {
    every?: AgentModelWhereInput
    some?: AgentModelWhereInput
    none?: AgentModelWhereInput
  }

  export type AgentModelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LlmApiModelCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    model?: SortOrder
  }

  export type LlmApiModelAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LlmApiModelMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    model?: SortOrder
  }

  export type LlmApiModelMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    model?: SortOrder
  }

  export type LlmApiModelSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumLLMPlatformWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LLMPlatform | EnumLLMPlatformFieldRefInput<$PrismaModel>
    in?: $Enums.LLMPlatform[] | ListEnumLLMPlatformFieldRefInput<$PrismaModel>
    notIn?: $Enums.LLMPlatform[] | ListEnumLLMPlatformFieldRefInput<$PrismaModel>
    not?: NestedEnumLLMPlatformWithAggregatesFilter<$PrismaModel> | $Enums.LLMPlatform
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLLMPlatformFilter<$PrismaModel>
    _max?: NestedEnumLLMPlatformFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserModelNullableScalarRelationFilter = {
    is?: UserModelWhereInput | null
    isNot?: UserModelWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type LlmApiKeyModelUserModelIdPlatformCompoundUniqueInput = {
    userModelId: number
    platform: $Enums.LLMPlatform
  }

  export type LlmApiKeyModelCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
    platform?: SortOrder
    key?: SortOrder
  }

  export type LlmApiKeyModelAvgOrderByAggregateInput = {
    id?: SortOrder
    userModelId?: SortOrder
  }

  export type LlmApiKeyModelMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
    platform?: SortOrder
    key?: SortOrder
  }

  export type LlmApiKeyModelMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
    platform?: SortOrder
    key?: SortOrder
  }

  export type LlmApiKeyModelSumOrderByAggregateInput = {
    id?: SortOrder
    userModelId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type LocationModelCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
    meta?: SortOrder
  }

  export type LocationModelAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LocationModelMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
  }

  export type LocationModelMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    core?: SortOrder
  }

  export type LocationModelSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserApiKeyModelCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
    key?: SortOrder
  }

  export type UserApiKeyModelAvgOrderByAggregateInput = {
    id?: SortOrder
    userModelId?: SortOrder
  }

  export type UserApiKeyModelMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
    key?: SortOrder
  }

  export type UserApiKeyModelMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
    key?: SortOrder
  }

  export type UserApiKeyModelSumOrderByAggregateInput = {
    id?: SortOrder
    userModelId?: SortOrder
  }

  export type UserApiHistoryModelCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
    request?: SortOrder
    response?: SortOrder
  }

  export type UserApiHistoryModelAvgOrderByAggregateInput = {
    id?: SortOrder
    userModelId?: SortOrder
  }

  export type UserApiHistoryModelMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
  }

  export type UserApiHistoryModelMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userModelId?: SortOrder
  }

  export type UserApiHistoryModelSumOrderByAggregateInput = {
    id?: SortOrder
    userModelId?: SortOrder
  }

  export type EnumUserPlatformFilter<$PrismaModel = never> = {
    equals?: $Enums.UserPlatform | EnumUserPlatformFieldRefInput<$PrismaModel>
    in?: $Enums.UserPlatform[] | ListEnumUserPlatformFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserPlatform[] | ListEnumUserPlatformFieldRefInput<$PrismaModel>
    not?: NestedEnumUserPlatformFilter<$PrismaModel> | $Enums.UserPlatform
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type UserApiKeyModelNullableScalarRelationFilter = {
    is?: UserApiKeyModelWhereInput | null
    isNot?: UserApiKeyModelWhereInput | null
  }

  export type UserApiHistoryModelListRelationFilter = {
    every?: UserApiHistoryModelWhereInput
    some?: UserApiHistoryModelWhereInput
    none?: UserApiHistoryModelWhereInput
  }

  export type LlmApiKeyModelListRelationFilter = {
    every?: LlmApiKeyModelWhereInput
    some?: LlmApiKeyModelWhereInput
    none?: LlmApiKeyModelWhereInput
  }

  export type UserApiHistoryModelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LlmApiKeyModelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserModelCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    pid?: SortOrder
    username?: SortOrder
    nickname?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
  }

  export type UserModelAvgOrderByAggregateInput = {
    id?: SortOrder
    pid?: SortOrder
  }

  export type UserModelMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    pid?: SortOrder
    username?: SortOrder
    nickname?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
  }

  export type UserModelMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    platform?: SortOrder
    pid?: SortOrder
    username?: SortOrder
    nickname?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
  }

  export type UserModelSumOrderByAggregateInput = {
    id?: SortOrder
    pid?: SortOrder
  }

  export type EnumUserPlatformWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserPlatform | EnumUserPlatformFieldRefInput<$PrismaModel>
    in?: $Enums.UserPlatform[] | ListEnumUserPlatformFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserPlatform[] | ListEnumUserPlatformFieldRefInput<$PrismaModel>
    not?: NestedEnumUserPlatformWithAggregatesFilter<$PrismaModel> | $Enums.UserPlatform
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserPlatformFilter<$PrismaModel>
    _max?: NestedEnumUserPlatformFilter<$PrismaModel>
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type LlmApiModelCreateNestedManyWithoutAgentsInput = {
    create?: XOR<LlmApiModelCreateWithoutAgentsInput, LlmApiModelUncheckedCreateWithoutAgentsInput> | LlmApiModelCreateWithoutAgentsInput[] | LlmApiModelUncheckedCreateWithoutAgentsInput[]
    connectOrCreate?: LlmApiModelCreateOrConnectWithoutAgentsInput | LlmApiModelCreateOrConnectWithoutAgentsInput[]
    connect?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
  }

  export type LlmApiModelUncheckedCreateNestedManyWithoutAgentsInput = {
    create?: XOR<LlmApiModelCreateWithoutAgentsInput, LlmApiModelUncheckedCreateWithoutAgentsInput> | LlmApiModelCreateWithoutAgentsInput[] | LlmApiModelUncheckedCreateWithoutAgentsInput[]
    connectOrCreate?: LlmApiModelCreateOrConnectWithoutAgentsInput | LlmApiModelCreateOrConnectWithoutAgentsInput[]
    connect?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type LlmApiModelUpdateManyWithoutAgentsNestedInput = {
    create?: XOR<LlmApiModelCreateWithoutAgentsInput, LlmApiModelUncheckedCreateWithoutAgentsInput> | LlmApiModelCreateWithoutAgentsInput[] | LlmApiModelUncheckedCreateWithoutAgentsInput[]
    connectOrCreate?: LlmApiModelCreateOrConnectWithoutAgentsInput | LlmApiModelCreateOrConnectWithoutAgentsInput[]
    upsert?: LlmApiModelUpsertWithWhereUniqueWithoutAgentsInput | LlmApiModelUpsertWithWhereUniqueWithoutAgentsInput[]
    set?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
    disconnect?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
    delete?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
    connect?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
    update?: LlmApiModelUpdateWithWhereUniqueWithoutAgentsInput | LlmApiModelUpdateWithWhereUniqueWithoutAgentsInput[]
    updateMany?: LlmApiModelUpdateManyWithWhereWithoutAgentsInput | LlmApiModelUpdateManyWithWhereWithoutAgentsInput[]
    deleteMany?: LlmApiModelScalarWhereInput | LlmApiModelScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type LlmApiModelUncheckedUpdateManyWithoutAgentsNestedInput = {
    create?: XOR<LlmApiModelCreateWithoutAgentsInput, LlmApiModelUncheckedCreateWithoutAgentsInput> | LlmApiModelCreateWithoutAgentsInput[] | LlmApiModelUncheckedCreateWithoutAgentsInput[]
    connectOrCreate?: LlmApiModelCreateOrConnectWithoutAgentsInput | LlmApiModelCreateOrConnectWithoutAgentsInput[]
    upsert?: LlmApiModelUpsertWithWhereUniqueWithoutAgentsInput | LlmApiModelUpsertWithWhereUniqueWithoutAgentsInput[]
    set?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
    disconnect?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
    delete?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
    connect?: LlmApiModelWhereUniqueInput | LlmApiModelWhereUniqueInput[]
    update?: LlmApiModelUpdateWithWhereUniqueWithoutAgentsInput | LlmApiModelUpdateWithWhereUniqueWithoutAgentsInput[]
    updateMany?: LlmApiModelUpdateManyWithWhereWithoutAgentsInput | LlmApiModelUpdateManyWithWhereWithoutAgentsInput[]
    deleteMany?: LlmApiModelScalarWhereInput | LlmApiModelScalarWhereInput[]
  }

  export type AgentModelCreateNestedManyWithoutLlmApisInput = {
    create?: XOR<AgentModelCreateWithoutLlmApisInput, AgentModelUncheckedCreateWithoutLlmApisInput> | AgentModelCreateWithoutLlmApisInput[] | AgentModelUncheckedCreateWithoutLlmApisInput[]
    connectOrCreate?: AgentModelCreateOrConnectWithoutLlmApisInput | AgentModelCreateOrConnectWithoutLlmApisInput[]
    connect?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
  }

  export type AgentModelUncheckedCreateNestedManyWithoutLlmApisInput = {
    create?: XOR<AgentModelCreateWithoutLlmApisInput, AgentModelUncheckedCreateWithoutLlmApisInput> | AgentModelCreateWithoutLlmApisInput[] | AgentModelUncheckedCreateWithoutLlmApisInput[]
    connectOrCreate?: AgentModelCreateOrConnectWithoutLlmApisInput | AgentModelCreateOrConnectWithoutLlmApisInput[]
    connect?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
  }

  export type EnumLLMPlatformFieldUpdateOperationsInput = {
    set?: $Enums.LLMPlatform
  }

  export type AgentModelUpdateManyWithoutLlmApisNestedInput = {
    create?: XOR<AgentModelCreateWithoutLlmApisInput, AgentModelUncheckedCreateWithoutLlmApisInput> | AgentModelCreateWithoutLlmApisInput[] | AgentModelUncheckedCreateWithoutLlmApisInput[]
    connectOrCreate?: AgentModelCreateOrConnectWithoutLlmApisInput | AgentModelCreateOrConnectWithoutLlmApisInput[]
    upsert?: AgentModelUpsertWithWhereUniqueWithoutLlmApisInput | AgentModelUpsertWithWhereUniqueWithoutLlmApisInput[]
    set?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
    disconnect?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
    delete?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
    connect?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
    update?: AgentModelUpdateWithWhereUniqueWithoutLlmApisInput | AgentModelUpdateWithWhereUniqueWithoutLlmApisInput[]
    updateMany?: AgentModelUpdateManyWithWhereWithoutLlmApisInput | AgentModelUpdateManyWithWhereWithoutLlmApisInput[]
    deleteMany?: AgentModelScalarWhereInput | AgentModelScalarWhereInput[]
  }

  export type AgentModelUncheckedUpdateManyWithoutLlmApisNestedInput = {
    create?: XOR<AgentModelCreateWithoutLlmApisInput, AgentModelUncheckedCreateWithoutLlmApisInput> | AgentModelCreateWithoutLlmApisInput[] | AgentModelUncheckedCreateWithoutLlmApisInput[]
    connectOrCreate?: AgentModelCreateOrConnectWithoutLlmApisInput | AgentModelCreateOrConnectWithoutLlmApisInput[]
    upsert?: AgentModelUpsertWithWhereUniqueWithoutLlmApisInput | AgentModelUpsertWithWhereUniqueWithoutLlmApisInput[]
    set?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
    disconnect?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
    delete?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
    connect?: AgentModelWhereUniqueInput | AgentModelWhereUniqueInput[]
    update?: AgentModelUpdateWithWhereUniqueWithoutLlmApisInput | AgentModelUpdateWithWhereUniqueWithoutLlmApisInput[]
    updateMany?: AgentModelUpdateManyWithWhereWithoutLlmApisInput | AgentModelUpdateManyWithWhereWithoutLlmApisInput[]
    deleteMany?: AgentModelScalarWhereInput | AgentModelScalarWhereInput[]
  }

  export type UserModelCreateNestedOneWithoutLlmApiKeysInput = {
    create?: XOR<UserModelCreateWithoutLlmApiKeysInput, UserModelUncheckedCreateWithoutLlmApiKeysInput>
    connectOrCreate?: UserModelCreateOrConnectWithoutLlmApiKeysInput
    connect?: UserModelWhereUniqueInput
  }

  export type UserModelUpdateOneWithoutLlmApiKeysNestedInput = {
    create?: XOR<UserModelCreateWithoutLlmApiKeysInput, UserModelUncheckedCreateWithoutLlmApiKeysInput>
    connectOrCreate?: UserModelCreateOrConnectWithoutLlmApiKeysInput
    upsert?: UserModelUpsertWithoutLlmApiKeysInput
    disconnect?: UserModelWhereInput | boolean
    delete?: UserModelWhereInput | boolean
    connect?: UserModelWhereUniqueInput
    update?: XOR<XOR<UserModelUpdateToOneWithWhereWithoutLlmApiKeysInput, UserModelUpdateWithoutLlmApiKeysInput>, UserModelUncheckedUpdateWithoutLlmApiKeysInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserModelCreateNestedOneWithoutApiKeyInput = {
    create?: XOR<UserModelCreateWithoutApiKeyInput, UserModelUncheckedCreateWithoutApiKeyInput>
    connectOrCreate?: UserModelCreateOrConnectWithoutApiKeyInput
    connect?: UserModelWhereUniqueInput
  }

  export type UserModelUpdateOneWithoutApiKeyNestedInput = {
    create?: XOR<UserModelCreateWithoutApiKeyInput, UserModelUncheckedCreateWithoutApiKeyInput>
    connectOrCreate?: UserModelCreateOrConnectWithoutApiKeyInput
    upsert?: UserModelUpsertWithoutApiKeyInput
    disconnect?: UserModelWhereInput | boolean
    delete?: UserModelWhereInput | boolean
    connect?: UserModelWhereUniqueInput
    update?: XOR<XOR<UserModelUpdateToOneWithWhereWithoutApiKeyInput, UserModelUpdateWithoutApiKeyInput>, UserModelUncheckedUpdateWithoutApiKeyInput>
  }

  export type UserModelCreateNestedOneWithoutApiHistoriesInput = {
    create?: XOR<UserModelCreateWithoutApiHistoriesInput, UserModelUncheckedCreateWithoutApiHistoriesInput>
    connectOrCreate?: UserModelCreateOrConnectWithoutApiHistoriesInput
    connect?: UserModelWhereUniqueInput
  }

  export type UserModelUpdateOneWithoutApiHistoriesNestedInput = {
    create?: XOR<UserModelCreateWithoutApiHistoriesInput, UserModelUncheckedCreateWithoutApiHistoriesInput>
    connectOrCreate?: UserModelCreateOrConnectWithoutApiHistoriesInput
    upsert?: UserModelUpsertWithoutApiHistoriesInput
    disconnect?: UserModelWhereInput | boolean
    delete?: UserModelWhereInput | boolean
    connect?: UserModelWhereUniqueInput
    update?: XOR<XOR<UserModelUpdateToOneWithWhereWithoutApiHistoriesInput, UserModelUpdateWithoutApiHistoriesInput>, UserModelUncheckedUpdateWithoutApiHistoriesInput>
  }

  export type UserApiKeyModelCreateNestedOneWithoutUserModelInput = {
    create?: XOR<UserApiKeyModelCreateWithoutUserModelInput, UserApiKeyModelUncheckedCreateWithoutUserModelInput>
    connectOrCreate?: UserApiKeyModelCreateOrConnectWithoutUserModelInput
    connect?: UserApiKeyModelWhereUniqueInput
  }

  export type UserApiHistoryModelCreateNestedManyWithoutUserModelInput = {
    create?: XOR<UserApiHistoryModelCreateWithoutUserModelInput, UserApiHistoryModelUncheckedCreateWithoutUserModelInput> | UserApiHistoryModelCreateWithoutUserModelInput[] | UserApiHistoryModelUncheckedCreateWithoutUserModelInput[]
    connectOrCreate?: UserApiHistoryModelCreateOrConnectWithoutUserModelInput | UserApiHistoryModelCreateOrConnectWithoutUserModelInput[]
    createMany?: UserApiHistoryModelCreateManyUserModelInputEnvelope
    connect?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
  }

  export type LlmApiKeyModelCreateNestedManyWithoutUserModelInput = {
    create?: XOR<LlmApiKeyModelCreateWithoutUserModelInput, LlmApiKeyModelUncheckedCreateWithoutUserModelInput> | LlmApiKeyModelCreateWithoutUserModelInput[] | LlmApiKeyModelUncheckedCreateWithoutUserModelInput[]
    connectOrCreate?: LlmApiKeyModelCreateOrConnectWithoutUserModelInput | LlmApiKeyModelCreateOrConnectWithoutUserModelInput[]
    createMany?: LlmApiKeyModelCreateManyUserModelInputEnvelope
    connect?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
  }

  export type UserApiKeyModelUncheckedCreateNestedOneWithoutUserModelInput = {
    create?: XOR<UserApiKeyModelCreateWithoutUserModelInput, UserApiKeyModelUncheckedCreateWithoutUserModelInput>
    connectOrCreate?: UserApiKeyModelCreateOrConnectWithoutUserModelInput
    connect?: UserApiKeyModelWhereUniqueInput
  }

  export type UserApiHistoryModelUncheckedCreateNestedManyWithoutUserModelInput = {
    create?: XOR<UserApiHistoryModelCreateWithoutUserModelInput, UserApiHistoryModelUncheckedCreateWithoutUserModelInput> | UserApiHistoryModelCreateWithoutUserModelInput[] | UserApiHistoryModelUncheckedCreateWithoutUserModelInput[]
    connectOrCreate?: UserApiHistoryModelCreateOrConnectWithoutUserModelInput | UserApiHistoryModelCreateOrConnectWithoutUserModelInput[]
    createMany?: UserApiHistoryModelCreateManyUserModelInputEnvelope
    connect?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
  }

  export type LlmApiKeyModelUncheckedCreateNestedManyWithoutUserModelInput = {
    create?: XOR<LlmApiKeyModelCreateWithoutUserModelInput, LlmApiKeyModelUncheckedCreateWithoutUserModelInput> | LlmApiKeyModelCreateWithoutUserModelInput[] | LlmApiKeyModelUncheckedCreateWithoutUserModelInput[]
    connectOrCreate?: LlmApiKeyModelCreateOrConnectWithoutUserModelInput | LlmApiKeyModelCreateOrConnectWithoutUserModelInput[]
    createMany?: LlmApiKeyModelCreateManyUserModelInputEnvelope
    connect?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
  }

  export type EnumUserPlatformFieldUpdateOperationsInput = {
    set?: $Enums.UserPlatform
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UserApiKeyModelUpdateOneWithoutUserModelNestedInput = {
    create?: XOR<UserApiKeyModelCreateWithoutUserModelInput, UserApiKeyModelUncheckedCreateWithoutUserModelInput>
    connectOrCreate?: UserApiKeyModelCreateOrConnectWithoutUserModelInput
    upsert?: UserApiKeyModelUpsertWithoutUserModelInput
    disconnect?: UserApiKeyModelWhereInput | boolean
    delete?: UserApiKeyModelWhereInput | boolean
    connect?: UserApiKeyModelWhereUniqueInput
    update?: XOR<XOR<UserApiKeyModelUpdateToOneWithWhereWithoutUserModelInput, UserApiKeyModelUpdateWithoutUserModelInput>, UserApiKeyModelUncheckedUpdateWithoutUserModelInput>
  }

  export type UserApiHistoryModelUpdateManyWithoutUserModelNestedInput = {
    create?: XOR<UserApiHistoryModelCreateWithoutUserModelInput, UserApiHistoryModelUncheckedCreateWithoutUserModelInput> | UserApiHistoryModelCreateWithoutUserModelInput[] | UserApiHistoryModelUncheckedCreateWithoutUserModelInput[]
    connectOrCreate?: UserApiHistoryModelCreateOrConnectWithoutUserModelInput | UserApiHistoryModelCreateOrConnectWithoutUserModelInput[]
    upsert?: UserApiHistoryModelUpsertWithWhereUniqueWithoutUserModelInput | UserApiHistoryModelUpsertWithWhereUniqueWithoutUserModelInput[]
    createMany?: UserApiHistoryModelCreateManyUserModelInputEnvelope
    set?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
    disconnect?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
    delete?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
    connect?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
    update?: UserApiHistoryModelUpdateWithWhereUniqueWithoutUserModelInput | UserApiHistoryModelUpdateWithWhereUniqueWithoutUserModelInput[]
    updateMany?: UserApiHistoryModelUpdateManyWithWhereWithoutUserModelInput | UserApiHistoryModelUpdateManyWithWhereWithoutUserModelInput[]
    deleteMany?: UserApiHistoryModelScalarWhereInput | UserApiHistoryModelScalarWhereInput[]
  }

  export type LlmApiKeyModelUpdateManyWithoutUserModelNestedInput = {
    create?: XOR<LlmApiKeyModelCreateWithoutUserModelInput, LlmApiKeyModelUncheckedCreateWithoutUserModelInput> | LlmApiKeyModelCreateWithoutUserModelInput[] | LlmApiKeyModelUncheckedCreateWithoutUserModelInput[]
    connectOrCreate?: LlmApiKeyModelCreateOrConnectWithoutUserModelInput | LlmApiKeyModelCreateOrConnectWithoutUserModelInput[]
    upsert?: LlmApiKeyModelUpsertWithWhereUniqueWithoutUserModelInput | LlmApiKeyModelUpsertWithWhereUniqueWithoutUserModelInput[]
    createMany?: LlmApiKeyModelCreateManyUserModelInputEnvelope
    set?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
    disconnect?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
    delete?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
    connect?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
    update?: LlmApiKeyModelUpdateWithWhereUniqueWithoutUserModelInput | LlmApiKeyModelUpdateWithWhereUniqueWithoutUserModelInput[]
    updateMany?: LlmApiKeyModelUpdateManyWithWhereWithoutUserModelInput | LlmApiKeyModelUpdateManyWithWhereWithoutUserModelInput[]
    deleteMany?: LlmApiKeyModelScalarWhereInput | LlmApiKeyModelScalarWhereInput[]
  }

  export type UserApiKeyModelUncheckedUpdateOneWithoutUserModelNestedInput = {
    create?: XOR<UserApiKeyModelCreateWithoutUserModelInput, UserApiKeyModelUncheckedCreateWithoutUserModelInput>
    connectOrCreate?: UserApiKeyModelCreateOrConnectWithoutUserModelInput
    upsert?: UserApiKeyModelUpsertWithoutUserModelInput
    disconnect?: UserApiKeyModelWhereInput | boolean
    delete?: UserApiKeyModelWhereInput | boolean
    connect?: UserApiKeyModelWhereUniqueInput
    update?: XOR<XOR<UserApiKeyModelUpdateToOneWithWhereWithoutUserModelInput, UserApiKeyModelUpdateWithoutUserModelInput>, UserApiKeyModelUncheckedUpdateWithoutUserModelInput>
  }

  export type UserApiHistoryModelUncheckedUpdateManyWithoutUserModelNestedInput = {
    create?: XOR<UserApiHistoryModelCreateWithoutUserModelInput, UserApiHistoryModelUncheckedCreateWithoutUserModelInput> | UserApiHistoryModelCreateWithoutUserModelInput[] | UserApiHistoryModelUncheckedCreateWithoutUserModelInput[]
    connectOrCreate?: UserApiHistoryModelCreateOrConnectWithoutUserModelInput | UserApiHistoryModelCreateOrConnectWithoutUserModelInput[]
    upsert?: UserApiHistoryModelUpsertWithWhereUniqueWithoutUserModelInput | UserApiHistoryModelUpsertWithWhereUniqueWithoutUserModelInput[]
    createMany?: UserApiHistoryModelCreateManyUserModelInputEnvelope
    set?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
    disconnect?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
    delete?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
    connect?: UserApiHistoryModelWhereUniqueInput | UserApiHistoryModelWhereUniqueInput[]
    update?: UserApiHistoryModelUpdateWithWhereUniqueWithoutUserModelInput | UserApiHistoryModelUpdateWithWhereUniqueWithoutUserModelInput[]
    updateMany?: UserApiHistoryModelUpdateManyWithWhereWithoutUserModelInput | UserApiHistoryModelUpdateManyWithWhereWithoutUserModelInput[]
    deleteMany?: UserApiHistoryModelScalarWhereInput | UserApiHistoryModelScalarWhereInput[]
  }

  export type LlmApiKeyModelUncheckedUpdateManyWithoutUserModelNestedInput = {
    create?: XOR<LlmApiKeyModelCreateWithoutUserModelInput, LlmApiKeyModelUncheckedCreateWithoutUserModelInput> | LlmApiKeyModelCreateWithoutUserModelInput[] | LlmApiKeyModelUncheckedCreateWithoutUserModelInput[]
    connectOrCreate?: LlmApiKeyModelCreateOrConnectWithoutUserModelInput | LlmApiKeyModelCreateOrConnectWithoutUserModelInput[]
    upsert?: LlmApiKeyModelUpsertWithWhereUniqueWithoutUserModelInput | LlmApiKeyModelUpsertWithWhereUniqueWithoutUserModelInput[]
    createMany?: LlmApiKeyModelCreateManyUserModelInputEnvelope
    set?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
    disconnect?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
    delete?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
    connect?: LlmApiKeyModelWhereUniqueInput | LlmApiKeyModelWhereUniqueInput[]
    update?: LlmApiKeyModelUpdateWithWhereUniqueWithoutUserModelInput | LlmApiKeyModelUpdateWithWhereUniqueWithoutUserModelInput[]
    updateMany?: LlmApiKeyModelUpdateManyWithWhereWithoutUserModelInput | LlmApiKeyModelUpdateManyWithWhereWithoutUserModelInput[]
    deleteMany?: LlmApiKeyModelScalarWhereInput | LlmApiKeyModelScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumLLMPlatformFilter<$PrismaModel = never> = {
    equals?: $Enums.LLMPlatform | EnumLLMPlatformFieldRefInput<$PrismaModel>
    in?: $Enums.LLMPlatform[] | ListEnumLLMPlatformFieldRefInput<$PrismaModel>
    notIn?: $Enums.LLMPlatform[] | ListEnumLLMPlatformFieldRefInput<$PrismaModel>
    not?: NestedEnumLLMPlatformFilter<$PrismaModel> | $Enums.LLMPlatform
  }

  export type NestedEnumLLMPlatformWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LLMPlatform | EnumLLMPlatformFieldRefInput<$PrismaModel>
    in?: $Enums.LLMPlatform[] | ListEnumLLMPlatformFieldRefInput<$PrismaModel>
    notIn?: $Enums.LLMPlatform[] | ListEnumLLMPlatformFieldRefInput<$PrismaModel>
    not?: NestedEnumLLMPlatformWithAggregatesFilter<$PrismaModel> | $Enums.LLMPlatform
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLLMPlatformFilter<$PrismaModel>
    _max?: NestedEnumLLMPlatformFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumUserPlatformFilter<$PrismaModel = never> = {
    equals?: $Enums.UserPlatform | EnumUserPlatformFieldRefInput<$PrismaModel>
    in?: $Enums.UserPlatform[] | ListEnumUserPlatformFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserPlatform[] | ListEnumUserPlatformFieldRefInput<$PrismaModel>
    not?: NestedEnumUserPlatformFilter<$PrismaModel> | $Enums.UserPlatform
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumUserPlatformWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserPlatform | EnumUserPlatformFieldRefInput<$PrismaModel>
    in?: $Enums.UserPlatform[] | ListEnumUserPlatformFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserPlatform[] | ListEnumUserPlatformFieldRefInput<$PrismaModel>
    not?: NestedEnumUserPlatformWithAggregatesFilter<$PrismaModel> | $Enums.UserPlatform
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserPlatformFilter<$PrismaModel>
    _max?: NestedEnumUserPlatformFilter<$PrismaModel>
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type LlmApiModelCreateWithoutAgentsInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    model: string
  }

  export type LlmApiModelUncheckedCreateWithoutAgentsInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    model: string
  }

  export type LlmApiModelCreateOrConnectWithoutAgentsInput = {
    where: LlmApiModelWhereUniqueInput
    create: XOR<LlmApiModelCreateWithoutAgentsInput, LlmApiModelUncheckedCreateWithoutAgentsInput>
  }

  export type LlmApiModelUpsertWithWhereUniqueWithoutAgentsInput = {
    where: LlmApiModelWhereUniqueInput
    update: XOR<LlmApiModelUpdateWithoutAgentsInput, LlmApiModelUncheckedUpdateWithoutAgentsInput>
    create: XOR<LlmApiModelCreateWithoutAgentsInput, LlmApiModelUncheckedCreateWithoutAgentsInput>
  }

  export type LlmApiModelUpdateWithWhereUniqueWithoutAgentsInput = {
    where: LlmApiModelWhereUniqueInput
    data: XOR<LlmApiModelUpdateWithoutAgentsInput, LlmApiModelUncheckedUpdateWithoutAgentsInput>
  }

  export type LlmApiModelUpdateManyWithWhereWithoutAgentsInput = {
    where: LlmApiModelScalarWhereInput
    data: XOR<LlmApiModelUpdateManyMutationInput, LlmApiModelUncheckedUpdateManyWithoutAgentsInput>
  }

  export type LlmApiModelScalarWhereInput = {
    AND?: LlmApiModelScalarWhereInput | LlmApiModelScalarWhereInput[]
    OR?: LlmApiModelScalarWhereInput[]
    NOT?: LlmApiModelScalarWhereInput | LlmApiModelScalarWhereInput[]
    id?: IntFilter<"LlmApiModel"> | number
    createdAt?: DateTimeFilter<"LlmApiModel"> | Date | string
    updatedAt?: DateTimeFilter<"LlmApiModel"> | Date | string
    platform?: EnumLLMPlatformFilter<"LlmApiModel"> | $Enums.LLMPlatform
    model?: StringFilter<"LlmApiModel"> | string
  }

  export type AgentModelCreateWithoutLlmApisInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    core: string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type AgentModelUncheckedCreateWithoutLlmApisInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    core: string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type AgentModelCreateOrConnectWithoutLlmApisInput = {
    where: AgentModelWhereUniqueInput
    create: XOR<AgentModelCreateWithoutLlmApisInput, AgentModelUncheckedCreateWithoutLlmApisInput>
  }

  export type AgentModelUpsertWithWhereUniqueWithoutLlmApisInput = {
    where: AgentModelWhereUniqueInput
    update: XOR<AgentModelUpdateWithoutLlmApisInput, AgentModelUncheckedUpdateWithoutLlmApisInput>
    create: XOR<AgentModelCreateWithoutLlmApisInput, AgentModelUncheckedCreateWithoutLlmApisInput>
  }

  export type AgentModelUpdateWithWhereUniqueWithoutLlmApisInput = {
    where: AgentModelWhereUniqueInput
    data: XOR<AgentModelUpdateWithoutLlmApisInput, AgentModelUncheckedUpdateWithoutLlmApisInput>
  }

  export type AgentModelUpdateManyWithWhereWithoutLlmApisInput = {
    where: AgentModelScalarWhereInput
    data: XOR<AgentModelUpdateManyMutationInput, AgentModelUncheckedUpdateManyWithoutLlmApisInput>
  }

  export type AgentModelScalarWhereInput = {
    AND?: AgentModelScalarWhereInput | AgentModelScalarWhereInput[]
    OR?: AgentModelScalarWhereInput[]
    NOT?: AgentModelScalarWhereInput | AgentModelScalarWhereInput[]
    id?: IntFilter<"AgentModel"> | number
    createdAt?: DateTimeFilter<"AgentModel"> | Date | string
    updatedAt?: DateTimeFilter<"AgentModel"> | Date | string
    name?: StringFilter<"AgentModel"> | string
    core?: StringFilter<"AgentModel"> | string
    meta?: JsonFilter<"AgentModel">
  }

  export type UserModelCreateWithoutLlmApiKeysInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
    apiKey?: UserApiKeyModelCreateNestedOneWithoutUserModelInput
    apiHistories?: UserApiHistoryModelCreateNestedManyWithoutUserModelInput
  }

  export type UserModelUncheckedCreateWithoutLlmApiKeysInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
    apiKey?: UserApiKeyModelUncheckedCreateNestedOneWithoutUserModelInput
    apiHistories?: UserApiHistoryModelUncheckedCreateNestedManyWithoutUserModelInput
  }

  export type UserModelCreateOrConnectWithoutLlmApiKeysInput = {
    where: UserModelWhereUniqueInput
    create: XOR<UserModelCreateWithoutLlmApiKeysInput, UserModelUncheckedCreateWithoutLlmApiKeysInput>
  }

  export type UserModelUpsertWithoutLlmApiKeysInput = {
    update: XOR<UserModelUpdateWithoutLlmApiKeysInput, UserModelUncheckedUpdateWithoutLlmApiKeysInput>
    create: XOR<UserModelCreateWithoutLlmApiKeysInput, UserModelUncheckedCreateWithoutLlmApiKeysInput>
    where?: UserModelWhereInput
  }

  export type UserModelUpdateToOneWithWhereWithoutLlmApiKeysInput = {
    where?: UserModelWhereInput
    data: XOR<UserModelUpdateWithoutLlmApiKeysInput, UserModelUncheckedUpdateWithoutLlmApiKeysInput>
  }

  export type UserModelUpdateWithoutLlmApiKeysInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    apiKey?: UserApiKeyModelUpdateOneWithoutUserModelNestedInput
    apiHistories?: UserApiHistoryModelUpdateManyWithoutUserModelNestedInput
  }

  export type UserModelUncheckedUpdateWithoutLlmApiKeysInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    apiKey?: UserApiKeyModelUncheckedUpdateOneWithoutUserModelNestedInput
    apiHistories?: UserApiHistoryModelUncheckedUpdateManyWithoutUserModelNestedInput
  }

  export type UserModelCreateWithoutApiKeyInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
    apiHistories?: UserApiHistoryModelCreateNestedManyWithoutUserModelInput
    llmApiKeys?: LlmApiKeyModelCreateNestedManyWithoutUserModelInput
  }

  export type UserModelUncheckedCreateWithoutApiKeyInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
    apiHistories?: UserApiHistoryModelUncheckedCreateNestedManyWithoutUserModelInput
    llmApiKeys?: LlmApiKeyModelUncheckedCreateNestedManyWithoutUserModelInput
  }

  export type UserModelCreateOrConnectWithoutApiKeyInput = {
    where: UserModelWhereUniqueInput
    create: XOR<UserModelCreateWithoutApiKeyInput, UserModelUncheckedCreateWithoutApiKeyInput>
  }

  export type UserModelUpsertWithoutApiKeyInput = {
    update: XOR<UserModelUpdateWithoutApiKeyInput, UserModelUncheckedUpdateWithoutApiKeyInput>
    create: XOR<UserModelCreateWithoutApiKeyInput, UserModelUncheckedCreateWithoutApiKeyInput>
    where?: UserModelWhereInput
  }

  export type UserModelUpdateToOneWithWhereWithoutApiKeyInput = {
    where?: UserModelWhereInput
    data: XOR<UserModelUpdateWithoutApiKeyInput, UserModelUncheckedUpdateWithoutApiKeyInput>
  }

  export type UserModelUpdateWithoutApiKeyInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    apiHistories?: UserApiHistoryModelUpdateManyWithoutUserModelNestedInput
    llmApiKeys?: LlmApiKeyModelUpdateManyWithoutUserModelNestedInput
  }

  export type UserModelUncheckedUpdateWithoutApiKeyInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    apiHistories?: UserApiHistoryModelUncheckedUpdateManyWithoutUserModelNestedInput
    llmApiKeys?: LlmApiKeyModelUncheckedUpdateManyWithoutUserModelNestedInput
  }

  export type UserModelCreateWithoutApiHistoriesInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
    apiKey?: UserApiKeyModelCreateNestedOneWithoutUserModelInput
    llmApiKeys?: LlmApiKeyModelCreateNestedManyWithoutUserModelInput
  }

  export type UserModelUncheckedCreateWithoutApiHistoriesInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.UserPlatform
    pid: bigint | number
    username?: string | null
    nickname: string
    firstName?: string | null
    lastName?: string | null
    apiKey?: UserApiKeyModelUncheckedCreateNestedOneWithoutUserModelInput
    llmApiKeys?: LlmApiKeyModelUncheckedCreateNestedManyWithoutUserModelInput
  }

  export type UserModelCreateOrConnectWithoutApiHistoriesInput = {
    where: UserModelWhereUniqueInput
    create: XOR<UserModelCreateWithoutApiHistoriesInput, UserModelUncheckedCreateWithoutApiHistoriesInput>
  }

  export type UserModelUpsertWithoutApiHistoriesInput = {
    update: XOR<UserModelUpdateWithoutApiHistoriesInput, UserModelUncheckedUpdateWithoutApiHistoriesInput>
    create: XOR<UserModelCreateWithoutApiHistoriesInput, UserModelUncheckedCreateWithoutApiHistoriesInput>
    where?: UserModelWhereInput
  }

  export type UserModelUpdateToOneWithWhereWithoutApiHistoriesInput = {
    where?: UserModelWhereInput
    data: XOR<UserModelUpdateWithoutApiHistoriesInput, UserModelUncheckedUpdateWithoutApiHistoriesInput>
  }

  export type UserModelUpdateWithoutApiHistoriesInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    apiKey?: UserApiKeyModelUpdateOneWithoutUserModelNestedInput
    llmApiKeys?: LlmApiKeyModelUpdateManyWithoutUserModelNestedInput
  }

  export type UserModelUncheckedUpdateWithoutApiHistoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumUserPlatformFieldUpdateOperationsInput | $Enums.UserPlatform
    pid?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    apiKey?: UserApiKeyModelUncheckedUpdateOneWithoutUserModelNestedInput
    llmApiKeys?: LlmApiKeyModelUncheckedUpdateManyWithoutUserModelNestedInput
  }

  export type UserApiKeyModelCreateWithoutUserModelInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    key: string
  }

  export type UserApiKeyModelUncheckedCreateWithoutUserModelInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    key: string
  }

  export type UserApiKeyModelCreateOrConnectWithoutUserModelInput = {
    where: UserApiKeyModelWhereUniqueInput
    create: XOR<UserApiKeyModelCreateWithoutUserModelInput, UserApiKeyModelUncheckedCreateWithoutUserModelInput>
  }

  export type UserApiHistoryModelCreateWithoutUserModelInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    request: JsonNullValueInput | InputJsonValue
    response: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelUncheckedCreateWithoutUserModelInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    request: JsonNullValueInput | InputJsonValue
    response: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelCreateOrConnectWithoutUserModelInput = {
    where: UserApiHistoryModelWhereUniqueInput
    create: XOR<UserApiHistoryModelCreateWithoutUserModelInput, UserApiHistoryModelUncheckedCreateWithoutUserModelInput>
  }

  export type UserApiHistoryModelCreateManyUserModelInputEnvelope = {
    data: UserApiHistoryModelCreateManyUserModelInput | UserApiHistoryModelCreateManyUserModelInput[]
    skipDuplicates?: boolean
  }

  export type LlmApiKeyModelCreateWithoutUserModelInput = {
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    key: string
  }

  export type LlmApiKeyModelUncheckedCreateWithoutUserModelInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    key: string
  }

  export type LlmApiKeyModelCreateOrConnectWithoutUserModelInput = {
    where: LlmApiKeyModelWhereUniqueInput
    create: XOR<LlmApiKeyModelCreateWithoutUserModelInput, LlmApiKeyModelUncheckedCreateWithoutUserModelInput>
  }

  export type LlmApiKeyModelCreateManyUserModelInputEnvelope = {
    data: LlmApiKeyModelCreateManyUserModelInput | LlmApiKeyModelCreateManyUserModelInput[]
    skipDuplicates?: boolean
  }

  export type UserApiKeyModelUpsertWithoutUserModelInput = {
    update: XOR<UserApiKeyModelUpdateWithoutUserModelInput, UserApiKeyModelUncheckedUpdateWithoutUserModelInput>
    create: XOR<UserApiKeyModelCreateWithoutUserModelInput, UserApiKeyModelUncheckedCreateWithoutUserModelInput>
    where?: UserApiKeyModelWhereInput
  }

  export type UserApiKeyModelUpdateToOneWithWhereWithoutUserModelInput = {
    where?: UserApiKeyModelWhereInput
    data: XOR<UserApiKeyModelUpdateWithoutUserModelInput, UserApiKeyModelUncheckedUpdateWithoutUserModelInput>
  }

  export type UserApiKeyModelUpdateWithoutUserModelInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
  }

  export type UserApiKeyModelUncheckedUpdateWithoutUserModelInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
  }

  export type UserApiHistoryModelUpsertWithWhereUniqueWithoutUserModelInput = {
    where: UserApiHistoryModelWhereUniqueInput
    update: XOR<UserApiHistoryModelUpdateWithoutUserModelInput, UserApiHistoryModelUncheckedUpdateWithoutUserModelInput>
    create: XOR<UserApiHistoryModelCreateWithoutUserModelInput, UserApiHistoryModelUncheckedCreateWithoutUserModelInput>
  }

  export type UserApiHistoryModelUpdateWithWhereUniqueWithoutUserModelInput = {
    where: UserApiHistoryModelWhereUniqueInput
    data: XOR<UserApiHistoryModelUpdateWithoutUserModelInput, UserApiHistoryModelUncheckedUpdateWithoutUserModelInput>
  }

  export type UserApiHistoryModelUpdateManyWithWhereWithoutUserModelInput = {
    where: UserApiHistoryModelScalarWhereInput
    data: XOR<UserApiHistoryModelUpdateManyMutationInput, UserApiHistoryModelUncheckedUpdateManyWithoutUserModelInput>
  }

  export type UserApiHistoryModelScalarWhereInput = {
    AND?: UserApiHistoryModelScalarWhereInput | UserApiHistoryModelScalarWhereInput[]
    OR?: UserApiHistoryModelScalarWhereInput[]
    NOT?: UserApiHistoryModelScalarWhereInput | UserApiHistoryModelScalarWhereInput[]
    id?: IntFilter<"UserApiHistoryModel"> | number
    createdAt?: DateTimeFilter<"UserApiHistoryModel"> | Date | string
    updatedAt?: DateTimeFilter<"UserApiHistoryModel"> | Date | string
    userModelId?: IntNullableFilter<"UserApiHistoryModel"> | number | null
    request?: JsonFilter<"UserApiHistoryModel">
    response?: JsonFilter<"UserApiHistoryModel">
  }

  export type LlmApiKeyModelUpsertWithWhereUniqueWithoutUserModelInput = {
    where: LlmApiKeyModelWhereUniqueInput
    update: XOR<LlmApiKeyModelUpdateWithoutUserModelInput, LlmApiKeyModelUncheckedUpdateWithoutUserModelInput>
    create: XOR<LlmApiKeyModelCreateWithoutUserModelInput, LlmApiKeyModelUncheckedCreateWithoutUserModelInput>
  }

  export type LlmApiKeyModelUpdateWithWhereUniqueWithoutUserModelInput = {
    where: LlmApiKeyModelWhereUniqueInput
    data: XOR<LlmApiKeyModelUpdateWithoutUserModelInput, LlmApiKeyModelUncheckedUpdateWithoutUserModelInput>
  }

  export type LlmApiKeyModelUpdateManyWithWhereWithoutUserModelInput = {
    where: LlmApiKeyModelScalarWhereInput
    data: XOR<LlmApiKeyModelUpdateManyMutationInput, LlmApiKeyModelUncheckedUpdateManyWithoutUserModelInput>
  }

  export type LlmApiKeyModelScalarWhereInput = {
    AND?: LlmApiKeyModelScalarWhereInput | LlmApiKeyModelScalarWhereInput[]
    OR?: LlmApiKeyModelScalarWhereInput[]
    NOT?: LlmApiKeyModelScalarWhereInput | LlmApiKeyModelScalarWhereInput[]
    id?: IntFilter<"LlmApiKeyModel"> | number
    createdAt?: DateTimeFilter<"LlmApiKeyModel"> | Date | string
    updatedAt?: DateTimeFilter<"LlmApiKeyModel"> | Date | string
    userModelId?: IntNullableFilter<"LlmApiKeyModel"> | number | null
    platform?: EnumLLMPlatformFilter<"LlmApiKeyModel"> | $Enums.LLMPlatform
    key?: StringFilter<"LlmApiKeyModel"> | string
  }

  export type LlmApiModelUpdateWithoutAgentsInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    model?: StringFieldUpdateOperationsInput | string
  }

  export type LlmApiModelUncheckedUpdateWithoutAgentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    model?: StringFieldUpdateOperationsInput | string
  }

  export type LlmApiModelUncheckedUpdateManyWithoutAgentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    model?: StringFieldUpdateOperationsInput | string
  }

  export type AgentModelUpdateWithoutLlmApisInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type AgentModelUncheckedUpdateWithoutLlmApisInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type AgentModelUncheckedUpdateManyWithoutLlmApisInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    core?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelCreateManyUserModelInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    request: JsonNullValueInput | InputJsonValue
    response: JsonNullValueInput | InputJsonValue
  }

  export type LlmApiKeyModelCreateManyUserModelInput = {
    id?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    platform: $Enums.LLMPlatform
    key: string
  }

  export type UserApiHistoryModelUpdateWithoutUserModelInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    request?: JsonNullValueInput | InputJsonValue
    response?: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelUncheckedUpdateWithoutUserModelInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    request?: JsonNullValueInput | InputJsonValue
    response?: JsonNullValueInput | InputJsonValue
  }

  export type UserApiHistoryModelUncheckedUpdateManyWithoutUserModelInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    request?: JsonNullValueInput | InputJsonValue
    response?: JsonNullValueInput | InputJsonValue
  }

  export type LlmApiKeyModelUpdateWithoutUserModelInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    key?: StringFieldUpdateOperationsInput | string
  }

  export type LlmApiKeyModelUncheckedUpdateWithoutUserModelInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    key?: StringFieldUpdateOperationsInput | string
  }

  export type LlmApiKeyModelUncheckedUpdateManyWithoutUserModelInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    platform?: EnumLLMPlatformFieldUpdateOperationsInput | $Enums.LLMPlatform
    key?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}